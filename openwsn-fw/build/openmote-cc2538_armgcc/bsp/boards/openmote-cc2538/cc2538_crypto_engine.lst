   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"cc2538_crypto_engine.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	rreg_uriquery:
  23 0000 683D7563 		.ascii	"h=ucb\000"
  23      6200
  24 0006 0000     		.align	2
  27              	infoBoardname:
  28 0008 43433235 		.ascii	"CC2538\000"
  28      333800
  29 000f 00       		.align	2
  32              	infouCName:
  33 0010 43433235 		.ascii	"CC2538\000"
  33      333800
  34 0017 00       		.align	2
  37              	infoRadioName:
  38 0018 43433235 		.ascii	"CC2538 SoC\000"
  38      33382053 
  38      6F4300
  39 0023 00       		.align	2
  42              	infoStackName:
  43 0024 4F70656E 		.ascii	"OpenWSN \000"
  43      57534E20 
  43      00
  44              		.text
  45              		.align	2
  46              		.thumb
  47              		.thumb_func
  49              	load_key:
  50              	.LFB0:
  51              		.file 1 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c"
   1:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** /**
   2:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** \brief Crypto engine implementation for OpenMote-CC2538
   3:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****   
   4:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** \author Malisa Vucinic <malishav@gmail.com>, March 2015.
   5:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** */
   6:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** #include <stdint.h>
   7:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
   8:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** #include <headers/hw_sys_ctrl.h>
   9:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  10:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** #include <source/sys_ctrl.h>
  11:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** #include <source/aes.h>
  12:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** #include <source/ccm.h>
  13:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  14:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** #include "cc2538_crypto_engine.h"
  15:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  16:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** #include "aes_ctr.h"
  17:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** #include "aes_cbc.h"
  18:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  19:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** #define DEFAULT_KEY_AREA KEY_AREA_0
  20:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** /**
  21:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** \brief On success, returns by reference the location in key RAM where the 
  22:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    new/existing key is stored.
  23:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** */
  24:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** static owerror_t load_key(uint8_t key[16], uint8_t* /* out */ key_location) {
  52              		.loc 1 24 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 8
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 90B5     		push	{r4, r7, lr}
  57              		.cfi_def_cfa_offset 12
  58              		.cfi_offset 4, -12
  59              		.cfi_offset 7, -8
  60              		.cfi_offset 14, -4
  61 0002 83B0     		sub	sp, sp, #12
  62              		.cfi_def_cfa_offset 24
  63 0004 00AF     		add	r7, sp, #0
  64              		.cfi_def_cfa_register 7
  65 0006 7860     		str	r0, [r7, #4]
  66 0008 3960     		str	r1, [r7]
  25:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    static uint8_t loaded_key[16];
  26:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    
  27:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    if(memcmp(loaded_key, key, 16) != 0) {
  67              		.loc 1 27 0
  68 000a 40F20000 		movw	r0, #:lower16:loaded_key.4895
  69 000e C0F20000 		movt	r0, #:upper16:loaded_key.4895
  70 0012 7968     		ldr	r1, [r7, #4]
  71 0014 1022     		movs	r2, #16
  72 0016 FFF7FEFF 		bl	memcmp
  73 001a 0346     		mov	r3, r0
  74 001c 002B     		cmp	r3, #0
  75 001e 17D0     		beq	.L2
  28:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       memcpy(loaded_key, key, 16);
  76              		.loc 1 28 0
  77 0020 40F20003 		movw	r3, #:lower16:loaded_key.4895
  78 0024 C0F20003 		movt	r3, #:upper16:loaded_key.4895
  79 0028 7A68     		ldr	r2, [r7, #4]
  80 002a 1C46     		mov	r4, r3
  81 002c 1346     		mov	r3, r2
  82 002e 1868     		ldr	r0, [r3]	@ unaligned
  83 0030 5968     		ldr	r1, [r3, #4]	@ unaligned
  84 0032 9A68     		ldr	r2, [r3, #8]	@ unaligned
  85 0034 DB68     		ldr	r3, [r3, #12]	@ unaligned
  86 0036 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  29:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       // Load the key in key RAM
  30:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       if(AESLoadKey(loaded_key, DEFAULT_KEY_AREA) != AES_SUCCESS) {
  87              		.loc 1 30 0
  88 0038 40F20000 		movw	r0, #:lower16:loaded_key.4895
  89 003c C0F20000 		movt	r0, #:upper16:loaded_key.4895
  90 0040 0021     		movs	r1, #0
  91 0042 FFF7FEFF 		bl	AESLoadKey
  92 0046 0346     		mov	r3, r0
  93 0048 002B     		cmp	r3, #0
  94 004a 01D0     		beq	.L2
  31:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          return E_FAIL;
  95              		.loc 1 31 0
  96 004c 0123     		movs	r3, #1
  97 004e 03E0     		b	.L3
  98              	.L2:
  32:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       }
  33:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    }
  34:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    *key_location = DEFAULT_KEY_AREA;
  99              		.loc 1 34 0
 100 0050 3B68     		ldr	r3, [r7]
 101 0052 0022     		movs	r2, #0
 102 0054 1A70     		strb	r2, [r3]
  35:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    return E_SUCCESS;
 103              		.loc 1 35 0
 104 0056 0023     		movs	r3, #0
 105              	.L3:
  36:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** }
 106              		.loc 1 36 0
 107 0058 1846     		mov	r0, r3
 108 005a 0C37     		adds	r7, r7, #12
 109 005c BD46     		mov	sp, r7
 110              		@ sp needed
 111 005e 90BD     		pop	{r4, r7, pc}
 112              		.cfi_endproc
 113              	.LFE0:
 115              		.align	2
 116              		.thumb
 117              		.thumb_func
 119              	init:
 120              	.LFB1:
  37:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  38:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** static owerror_t init(void) {
 121              		.loc 1 38 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0060 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0062 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
  39:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    //
  40:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    // Enable AES peripheral
  41:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    //
  42:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    SysCtrlPeripheralReset(SYS_CTRL_PERIPH_AES);
 131              		.loc 1 42 0
 132 0064 40F20140 		movw	r0, #1025
 133 0068 FFF7FEFF 		bl	SysCtrlPeripheralReset
  43:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    SysCtrlPeripheralEnable(SYS_CTRL_PERIPH_AES);
 134              		.loc 1 43 0
 135 006c 40F20140 		movw	r0, #1025
 136 0070 FFF7FEFF 		bl	SysCtrlPeripheralEnable
  44:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    return E_SUCCESS;
 137              		.loc 1 44 0
 138 0074 0023     		movs	r3, #0
  45:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** }
 139              		.loc 1 45 0
 140 0076 1846     		mov	r0, r3
 141 0078 80BD     		pop	{r7, pc}
 142              		.cfi_endproc
 143              	.LFE1:
 145 007a 00BF     		.align	2
 146              		.thumb
 147              		.thumb_func
 149              	aes_ccms_enc_cc2538:
 150              	.LFB2:
  46:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  47:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** static owerror_t aes_ccms_enc_cc2538(uint8_t* a,
  48:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t len_a,
  49:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t* m,
  50:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t* len_m,
  51:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t* nonce,
  52:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t l,
  53:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t key[16],
  54:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t len_mac) {
 151              		.loc 1 54 0
 152              		.cfi_startproc
 153              		@ args = 16, pretend = 0, frame = 24
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155 007c B0B5     		push	{r4, r5, r7, lr}
 156              		.cfi_def_cfa_offset 16
 157              		.cfi_offset 4, -16
 158              		.cfi_offset 5, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 007e 8EB0     		sub	sp, sp, #56
 162              		.cfi_def_cfa_offset 72
 163 0080 08AF     		add	r7, sp, #32
 164              		.cfi_def_cfa 7, 40
 165 0082 F860     		str	r0, [r7, #12]
 166 0084 7A60     		str	r2, [r7, #4]
 167 0086 3B60     		str	r3, [r7]
 168 0088 0B46     		mov	r3, r1
 169 008a FB72     		strb	r3, [r7, #11]
  55:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  56:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    bool encrypt;
  57:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    uint8_t key_location;
  58:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****   
  59:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    encrypt = *len_m > 0 ? true : false;
 170              		.loc 1 59 0
 171 008c 3B68     		ldr	r3, [r7]
 172 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173 0090 002B     		cmp	r3, #0
 174 0092 0CBF     		ite	eq
 175 0094 0023     		moveq	r3, #0
 176 0096 0123     		movne	r3, #1
 177 0098 FB75     		strb	r3, [r7, #23]
  60:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  61:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    if(load_key(key, &key_location) == E_SUCCESS) {
 178              		.loc 1 61 0
 179 009a 07F11603 		add	r3, r7, #22
 180 009e 386B     		ldr	r0, [r7, #48]
 181 00a0 1946     		mov	r1, r3
 182 00a2 FFF7ADFF 		bl	load_key
 183 00a6 0346     		mov	r3, r0
 184 00a8 002B     		cmp	r3, #0
 185 00aa 41D1     		bne	.L7
  62:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       if(CCMAuthEncryptStart(encrypt,
  63:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               len_mac,
  64:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               nonce,
  65:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               m,
  66:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               (uint16_t) *len_m,
 186              		.loc 1 66 0
 187 00ac 3B68     		ldr	r3, [r7]
 188 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       if(CCMAuthEncryptStart(encrypt,
 189              		.loc 1 62 0
 190 00b0 1D46     		mov	r5, r3
 191 00b2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 192 00b4 9CB2     		uxth	r4, r3
 193 00b6 B87D     		ldrb	r0, [r7, #22]	@ zero_extendqisi2
  67:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               a,
  68:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               (uint16_t) len_a,
  69:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               key_location,
  70:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               &m[*len_m],
 194              		.loc 1 70 0
 195 00b8 3B68     		ldr	r3, [r7]
 196 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       if(CCMAuthEncryptStart(encrypt,
 197              		.loc 1 62 0
 198 00bc 7A68     		ldr	r2, [r7, #4]
 199 00be D118     		adds	r1, r2, r3
 200 00c0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 201 00c2 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 202 00c6 0095     		str	r5, [sp]
 203 00c8 FD68     		ldr	r5, [r7, #12]
 204 00ca 0195     		str	r5, [sp, #4]
 205 00cc 0294     		str	r4, [sp, #8]
 206 00ce 0390     		str	r0, [sp, #12]
 207 00d0 0491     		str	r1, [sp, #16]
 208 00d2 97F82C10 		ldrb	r1, [r7, #44]	@ zero_extendqisi2
 209 00d6 0591     		str	r1, [sp, #20]
 210 00d8 0021     		movs	r1, #0
 211 00da 0691     		str	r1, [sp, #24]
 212 00dc 1046     		mov	r0, r2
 213 00de 1946     		mov	r1, r3
 214 00e0 BA6A     		ldr	r2, [r7, #40]
 215 00e2 7B68     		ldr	r3, [r7, #4]
 216 00e4 FFF7FEFF 		bl	CCMAuthEncryptStart
 217 00e8 0346     		mov	r3, r0
 218 00ea 002B     		cmp	r3, #0
 219 00ec 20D1     		bne	.L7
 220              	.L8:
  71:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               l,
  72:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               /* polling */ 0) == AES_SUCCESS) {
  73:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  74:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          do {
  75:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****             ASM_NOP;
 221              		.loc 1 75 0 discriminator 1
 222              	@ 75 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c" 1
 223 00ee 00BF     		NOP
 224              	@ 0 "" 2
  76:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          } while(CCMAuthEncryptCheckResult() == 0);
 225              		.loc 1 76 0 discriminator 1
 226              		.thumb
 227 00f0 FFF7FEFF 		bl	CCMAuthEncryptCheckResult
 228 00f4 0346     		mov	r3, r0
 229 00f6 002B     		cmp	r3, #0
 230 00f8 F9D0     		beq	.L8
  77:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****         
  78:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          if(CCMAuthEncryptGetResult(len_mac, 
  79:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                                     (uint16_t) *len_m,
 231              		.loc 1 79 0
 232 00fa 3B68     		ldr	r3, [r7]
 233 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  78:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                                     (uint16_t) *len_m,
 234              		.loc 1 78 0
 235 00fe 1A46     		mov	r2, r3
  80:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                                     &m[*len_m]) == AES_SUCCESS) {
 236              		.loc 1 80 0
 237 0100 3B68     		ldr	r3, [r7]
 238 0102 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  78:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                                     (uint16_t) *len_m,
 239              		.loc 1 78 0
 240 0104 7968     		ldr	r1, [r7, #4]
 241 0106 0B44     		add	r3, r3, r1
 242 0108 97F83410 		ldrb	r1, [r7, #52]	@ zero_extendqisi2
 243 010c 0846     		mov	r0, r1
 244 010e 1146     		mov	r1, r2
 245 0110 1A46     		mov	r2, r3
 246 0112 FFF7FEFF 		bl	CCMAuthEncryptGetResult
 247 0116 0346     		mov	r3, r0
 248 0118 002B     		cmp	r3, #0
 249 011a 09D1     		bne	.L7
  81:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  82:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****             *len_m += len_mac;
 250              		.loc 1 82 0
 251 011c 3B68     		ldr	r3, [r7]
 252 011e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 253 0120 97F83430 		ldrb	r3, [r7, #52]
 254 0124 1344     		add	r3, r3, r2
 255 0126 DAB2     		uxtb	r2, r3
 256 0128 3B68     		ldr	r3, [r7]
 257 012a 1A70     		strb	r2, [r3]
  83:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****             return E_SUCCESS;
 258              		.loc 1 83 0
 259 012c 0023     		movs	r3, #0
 260 012e 00E0     		b	.L10
 261              	.L7:
  84:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          }
  85:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       }
  86:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    }
  87:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  88:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    return E_FAIL;
 262              		.loc 1 88 0
 263 0130 0123     		movs	r3, #1
 264              	.L10:
  89:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** }
 265              		.loc 1 89 0
 266 0132 1846     		mov	r0, r3
 267 0134 1837     		adds	r7, r7, #24
 268 0136 BD46     		mov	sp, r7
 269              		@ sp needed
 270 0138 B0BD     		pop	{r4, r5, r7, pc}
 271              		.cfi_endproc
 272              	.LFE2:
 274 013a 00BF     		.align	2
 275              		.thumb
 276              		.thumb_func
 278              	aes_ccms_dec_cc2538:
 279              	.LFB3:
  90:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
  91:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** static owerror_t aes_ccms_dec_cc2538(uint8_t* a,
  92:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t len_a,
  93:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t* m,
  94:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t* len_m,
  95:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t* nonce,
  96:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t l,
  97:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t key[16],
  98:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          uint8_t len_mac) {
 280              		.loc 1 98 0
 281              		.cfi_startproc
 282              		@ args = 16, pretend = 0, frame = 40
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 013c 90B5     		push	{r4, r7, lr}
 285              		.cfi_def_cfa_offset 12
 286              		.cfi_offset 4, -12
 287              		.cfi_offset 7, -8
 288              		.cfi_offset 14, -4
 289 013e 93B0     		sub	sp, sp, #76
 290              		.cfi_def_cfa_offset 88
 291 0140 08AF     		add	r7, sp, #32
 292              		.cfi_def_cfa 7, 56
 293 0142 F860     		str	r0, [r7, #12]
 294 0144 7A60     		str	r2, [r7, #4]
 295 0146 3B60     		str	r3, [r7]
 296 0148 0B46     		mov	r3, r1
 297 014a FB72     		strb	r3, [r7, #11]
  99:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
 100:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    bool decrypt;
 101:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    uint8_t key_location;
 102:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    uint8_t tag[CBC_MAX_MAC_SIZE];
 103:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****   
 104:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    decrypt = *len_m - len_mac > 0 ? true : false;
 298              		.loc 1 104 0
 299 014c 3B68     		ldr	r3, [r7]
 300 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 301 0150 1A46     		mov	r2, r3
 302 0152 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 303 0156 D31A     		subs	r3, r2, r3
 304 0158 002B     		cmp	r3, #0
 305 015a D4BF     		ite	le
 306 015c 0023     		movle	r3, #0
 307 015e 0123     		movgt	r3, #1
 308 0160 87F82730 		strb	r3, [r7, #39]
 105:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
 106:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    if(load_key(key, &key_location) == E_SUCCESS) {
 309              		.loc 1 106 0
 310 0164 07F12603 		add	r3, r7, #38
 311 0168 386C     		ldr	r0, [r7, #64]
 312 016a 1946     		mov	r1, r3
 313 016c FFF748FF 		bl	load_key
 314 0170 0346     		mov	r3, r0
 315 0172 002B     		cmp	r3, #0
 316 0174 3ED1     		bne	.L12
 107:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       if(CCMInvAuthDecryptStart(decrypt,
 108:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               len_mac,
 109:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               nonce,
 110:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               m,
 111:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               (uint16_t) *len_m,
 317              		.loc 1 111 0
 318 0176 3B68     		ldr	r3, [r7]
 319 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 107:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       if(CCMInvAuthDecryptStart(decrypt,
 320              		.loc 1 107 0
 321 017a 1C46     		mov	r4, r3
 322 017c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 323 017e 98B2     		uxth	r0, r3
 324 0180 97F82610 		ldrb	r1, [r7, #38]	@ zero_extendqisi2
 325 0184 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 326 0188 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 327 018c 0094     		str	r4, [sp]
 328 018e FC68     		ldr	r4, [r7, #12]
 329 0190 0194     		str	r4, [sp, #4]
 330 0192 0290     		str	r0, [sp, #8]
 331 0194 0391     		str	r1, [sp, #12]
 332 0196 07F11401 		add	r1, r7, #20
 333 019a 0491     		str	r1, [sp, #16]
 334 019c 97F83C10 		ldrb	r1, [r7, #60]	@ zero_extendqisi2
 335 01a0 0591     		str	r1, [sp, #20]
 336 01a2 0021     		movs	r1, #0
 337 01a4 0691     		str	r1, [sp, #24]
 338 01a6 1046     		mov	r0, r2
 339 01a8 1946     		mov	r1, r3
 340 01aa BA6B     		ldr	r2, [r7, #56]
 341 01ac 7B68     		ldr	r3, [r7, #4]
 342 01ae FFF7FEFF 		bl	CCMInvAuthDecryptStart
 343 01b2 0346     		mov	r3, r0
 344 01b4 002B     		cmp	r3, #0
 345 01b6 1DD1     		bne	.L12
 346              	.L13:
 112:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               a,
 113:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               (uint16_t) len_a,
 114:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               key_location,
 115:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               tag,
 116:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               l,
 117:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                               /* polling */ 0) == AES_SUCCESS) {
 118:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
 119:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          do {
 120:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****             ASM_NOP;
 347              		.loc 1 120 0 discriminator 1
 348              	@ 120 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c" 1
 349 01b8 00BF     		NOP
 350              	@ 0 "" 2
 121:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          } while(CCMInvAuthDecryptCheckResult() == 0);
 351              		.loc 1 121 0 discriminator 1
 352              		.thumb
 353 01ba FFF7FEFF 		bl	CCMInvAuthDecryptCheckResult
 354 01be 0346     		mov	r3, r0
 355 01c0 002B     		cmp	r3, #0
 356 01c2 F9D0     		beq	.L13
 122:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****        
 123:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          if(CCMInvAuthDecryptGetResult(len_mac, 
 124:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                                        m,
 125:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                                        (uint16_t) *len_m,
 357              		.loc 1 125 0
 358 01c4 3B68     		ldr	r3, [r7]
 359 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 123:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                                        m,
 360              		.loc 1 123 0
 361 01c8 1A46     		mov	r2, r3
 362 01ca 97F84410 		ldrb	r1, [r7, #68]	@ zero_extendqisi2
 363 01ce 07F11403 		add	r3, r7, #20
 364 01d2 0846     		mov	r0, r1
 365 01d4 7968     		ldr	r1, [r7, #4]
 366 01d6 FFF7FEFF 		bl	CCMInvAuthDecryptGetResult
 367 01da 0346     		mov	r3, r0
 368 01dc 002B     		cmp	r3, #0
 369 01de 09D1     		bne	.L12
 126:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****                                        tag) == AES_SUCCESS) {
 127:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
 128:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****             *len_m -= len_mac;
 370              		.loc 1 128 0
 371 01e0 3B68     		ldr	r3, [r7]
 372 01e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 373 01e4 97F84430 		ldrb	r3, [r7, #68]
 374 01e8 D31A     		subs	r3, r2, r3
 375 01ea DAB2     		uxtb	r2, r3
 376 01ec 3B68     		ldr	r3, [r7]
 377 01ee 1A70     		strb	r2, [r3]
 129:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****             return E_SUCCESS;
 378              		.loc 1 129 0
 379 01f0 0023     		movs	r3, #0
 380 01f2 00E0     		b	.L15
 381              	.L12:
 130:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          }
 131:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       }
 132:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    }
 133:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    return E_FAIL;
 382              		.loc 1 133 0
 383 01f4 0123     		movs	r3, #1
 384              	.L15:
 134:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** }
 385              		.loc 1 134 0
 386 01f6 1846     		mov	r0, r3
 387 01f8 2C37     		adds	r7, r7, #44
 388 01fa BD46     		mov	sp, r7
 389              		@ sp needed
 390 01fc 90BD     		pop	{r4, r7, pc}
 391              		.cfi_endproc
 392              	.LFE3:
 394 01fe 00BF     		.align	2
 395              		.thumb
 396              		.thumb_func
 398              	aes_ecb_enc_cc2538:
 399              	.LFB4:
 135:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
 136:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** static owerror_t aes_ecb_enc_cc2538(uint8_t* buffer, uint8_t* key) {
 400              		.loc 1 136 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 16
 403              		@ frame_needed = 1, uses_anonymous_args = 0
 404 0200 80B5     		push	{r7, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 7, -8
 407              		.cfi_offset 14, -4
 408 0202 86B0     		sub	sp, sp, #24
 409              		.cfi_def_cfa_offset 32
 410 0204 02AF     		add	r7, sp, #8
 411              		.cfi_def_cfa 7, 24
 412 0206 7860     		str	r0, [r7, #4]
 413 0208 3960     		str	r1, [r7]
 137:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    uint8_t key_location;
 138:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    if(load_key(key, &key_location) == E_SUCCESS) {
 414              		.loc 1 138 0
 415 020a 07F10F03 		add	r3, r7, #15
 416 020e 3868     		ldr	r0, [r7]
 417 0210 1946     		mov	r1, r3
 418 0212 FFF7F5FE 		bl	load_key
 419 0216 0346     		mov	r3, r0
 420 0218 002B     		cmp	r3, #0
 421 021a 18D1     		bne	.L17
 139:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       // Polling
 140:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       if(AESECBStart(buffer, buffer, key_location, 1, 0) == AES_SUCCESS) {
 422              		.loc 1 140 0
 423 021c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 424 021e 0022     		movs	r2, #0
 425 0220 0092     		str	r2, [sp]
 426 0222 7868     		ldr	r0, [r7, #4]
 427 0224 7968     		ldr	r1, [r7, #4]
 428 0226 1A46     		mov	r2, r3
 429 0228 0123     		movs	r3, #1
 430 022a FFF7FEFF 		bl	AESECBStart
 431 022e 0346     		mov	r3, r0
 432 0230 002B     		cmp	r3, #0
 433 0232 0CD1     		bne	.L17
 434              	.L18:
 141:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          do {
 142:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****             ASM_NOP;
 435              		.loc 1 142 0 discriminator 1
 436              	@ 142 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c" 1
 437 0234 00BF     		NOP
 438              	@ 0 "" 2
 143:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          } while(AESECBCheckResult() == 0);
 439              		.loc 1 143 0 discriminator 1
 440              		.thumb
 441 0236 FFF7FEFF 		bl	AESECBCheckResult
 442 023a 0346     		mov	r3, r0
 443 023c 002B     		cmp	r3, #0
 444 023e F9D0     		beq	.L18
 144:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** 
 145:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          if(AESECBGetResult() == AES_SUCCESS) {
 445              		.loc 1 145 0
 446 0240 FFF7FEFF 		bl	AESECBGetResult
 447 0244 0346     		mov	r3, r0
 448 0246 002B     		cmp	r3, #0
 449 0248 01D1     		bne	.L17
 146:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****             return E_SUCCESS;
 450              		.loc 1 146 0
 451 024a 0023     		movs	r3, #0
 452 024c 00E0     		b	.L20
 453              	.L17:
 147:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****          }
 148:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****       }
 149:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    }
 150:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c ****    return E_FAIL;
 454              		.loc 1 150 0
 455 024e 0123     		movs	r3, #1
 456              	.L20:
 151:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cc2538_crypto_engine.c **** }
 457              		.loc 1 151 0
 458 0250 1846     		mov	r0, r3
 459 0252 1037     		adds	r7, r7, #16
 460 0254 BD46     		mov	sp, r7
 461              		@ sp needed
 462 0256 80BD     		pop	{r7, pc}
 463              		.cfi_endproc
 464              	.LFE4:
 466              		.global	board_crypto_engine
 467              		.section	.rodata
 468 002d 000000   		.align	2
 471              	board_crypto_engine:
 472 0030 00000000 		.word	aes_ccms_enc_cc2538
 473 0034 00000000 		.word	aes_ccms_dec_cc2538
 474 0038 00000000 		.word	aes_cbc_enc_raw
 475 003c 00000000 		.word	aes_ctr_enc_raw
 476 0040 00000000 		.word	aes_ecb_enc_cc2538
 477 0044 00000000 		.word	init
 478              		.bss
 479              		.align	2
 480              	loaded_key.4895:
 481 0000 00000000 		.space	16
 481      00000000 
 481      00000000 
 481      00000000 
 482              		.text
 483              	.Letext0:
 484              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 485              		.file 3 "/usr/include/newlib/stdint.h"
 486              		.file 4 "bsp/boards/openmote-cc2538/source/aes.h"
 487              		.file 5 "inc/opendefs.h"
 488              		.file 6 "bsp/boards/crypto_engine.h"
 489              		.file 7 "bsp/boards/openmote-cc2538/board_info.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 cc2538_crypto_engine.c
     /tmp/ccDaQAoS.s:19     .rodata:0000000000000000 $d
     /tmp/ccDaQAoS.s:22     .rodata:0000000000000000 rreg_uriquery
     /tmp/ccDaQAoS.s:27     .rodata:0000000000000008 infoBoardname
     /tmp/ccDaQAoS.s:32     .rodata:0000000000000010 infouCName
     /tmp/ccDaQAoS.s:37     .rodata:0000000000000018 infoRadioName
     /tmp/ccDaQAoS.s:42     .rodata:0000000000000024 infoStackName
     /tmp/ccDaQAoS.s:45     .text:0000000000000000 $t
     /tmp/ccDaQAoS.s:49     .text:0000000000000000 load_key
     /tmp/ccDaQAoS.s:480    .bss:0000000000000000 loaded_key.4895
     /tmp/ccDaQAoS.s:119    .text:0000000000000060 init
     /tmp/ccDaQAoS.s:149    .text:000000000000007c aes_ccms_enc_cc2538
     /tmp/ccDaQAoS.s:278    .text:000000000000013c aes_ccms_dec_cc2538
     /tmp/ccDaQAoS.s:398    .text:0000000000000200 aes_ecb_enc_cc2538
     /tmp/ccDaQAoS.s:471    .rodata:0000000000000030 board_crypto_engine
     /tmp/ccDaQAoS.s:479    .bss:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.08074afb2ccc9da754fae8e3ee0f577b
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.hw_sys_ctrl.h.39.50b4d7775c38e82076d0eb3bdc2daf82
                           .group:0000000000000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.sys_ctrl.h.62.2f03f4949954c40d60d71df89cf310cb
                           .group:0000000000000000 wm4.hw_aes.h.39.77ecc3829d96bb0e5669b1f36ecffb12
                           .group:0000000000000000 wm4.hw_ints.h.42.85b9479f2be35b086f1bb7cbb15bc097
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.aes.h.66.0fb976edb685649779bd34f5f8f7ef75
                           .group:0000000000000000 wm4.toolchain_defs.h.2.1de8df52ab2567aa1aa0a288d2325900
                           .group:0000000000000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:0000000000000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:0000000000000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:0000000000000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:0000000000000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:0000000000000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:0000000000000000 wm4.cdefs.h.47.339223046f475c9f2d5db3a9118d7c65
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:0000000000000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:0000000000000000 wm4.board_info.h.22.aeb00002354a4949fff54190040e37af
                           .group:0000000000000000 wm4.opendefs.h.23.16dafe2a30b31097968a5d4db894173a
                           .group:0000000000000000 wm4.crypto_engine.h.17.23540fa955a265a0c9d1c1216a5a854b

UNDEFINED SYMBOLS
memcmp
AESLoadKey
SysCtrlPeripheralReset
SysCtrlPeripheralEnable
CCMAuthEncryptStart
CCMAuthEncryptCheckResult
CCMAuthEncryptGetResult
CCMInvAuthDecryptStart
CCMInvAuthDecryptCheckResult
CCMInvAuthDecryptGetResult
AESECBStart
AESECBCheckResult
AESECBGetResult
aes_cbc_enc_raw
aes_ctr_enc_raw

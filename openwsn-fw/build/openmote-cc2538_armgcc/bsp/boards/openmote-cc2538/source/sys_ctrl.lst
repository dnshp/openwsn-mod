   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"sys_ctrl.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	g_pui32RCGCRegs:
  23 0000 08200D40 		.word	1074601992
  24 0004 18200D40 		.word	1074602008
  25 0008 28200D40 		.word	1074602024
  26 000c 38200D40 		.word	1074602040
  27 0010 48200D40 		.word	1074602056
  28 0014 A8200D40 		.word	1074602152
  29              		.align	2
  32              	g_pui32SCGCRegs:
  33 0018 0C200D40 		.word	1074601996
  34 001c 1C200D40 		.word	1074602012
  35 0020 2C200D40 		.word	1074602028
  36 0024 3C200D40 		.word	1074602044
  37 0028 4C200D40 		.word	1074602060
  38 002c AC200D40 		.word	1074602156
  39              		.align	2
  42              	g_pui32DCGCRegs:
  43 0030 10200D40 		.word	1074602000
  44 0034 20200D40 		.word	1074602016
  45 0038 30200D40 		.word	1074602032
  46 003c 40200D40 		.word	1074602048
  47 0040 50200D40 		.word	1074602064
  48 0044 B0200D40 		.word	1074602160
  49              		.align	2
  52              	g_pui32SRRegs:
  53 0048 14200D40 		.word	1074602004
  54 004c 24200D40 		.word	1074602020
  55 0050 34200D40 		.word	1074602036
  56 0054 44200D40 		.word	1074602052
  57 0058 54200D40 		.word	1074602068
  58              		.align	2
  61              	g_pui32DieCfgMask:
  62 005c 01000000 		.word	1
  63 0060 00010000 		.word	256
  64 0064 00000100 		.word	65536
  65 0068 00000001 		.word	16777216
  66 006c 01000000 		.word	1
  67 0070 04000000 		.word	4
  68              		.text
  69              		.align	2
  70              		.global	SysCtrlClockSet
  71              		.thumb
  72              		.thumb_func
  74              	SysCtrlClockSet:
  75              	.LFB0:
  76              		.file 1 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c"
   1:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** /******************************************************************************
   2:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  Filename:       sys_ctrl.c
   3:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  Revised:        $Date: 2013-04-29 09:29:18 +0200 (Mon, 29 Apr 2013) $
   4:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  Revision:       $Revision: 9921 $
   5:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *
   6:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  Description:    Driver for the system controller.
   7:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *
   8:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
   9:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *
  10:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *
  11:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  Redistribution and use in source and binary forms, with or without
  12:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  modification, are permitted provided that the following conditions
  13:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  are met:
  14:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *
  15:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *    Redistributions of source code must retain the above copyright
  16:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *    notice, this list of conditions and the following disclaimer.
  17:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *
  18:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *    Redistributions in binary form must reproduce the above copyright
  19:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *    notice, this list of conditions and the following disclaimer in the
  20:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *    documentation and/or other materials provided with the distribution.
  21:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *
  22:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *    Neither the name of Texas Instruments Incorporated nor the names of
  23:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *    its contributors may be used to endorse or promote products derived
  24:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *    from this software without specific prior written permission.
  25:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *
  26:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  27:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  28:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  29:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  30:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  31:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  32:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  33:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  34:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  35:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** *
  38:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** ******************************************************************************/
  39:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
  40:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
  41:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
  42:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \addtogroup sysctl_api
  43:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! @{
  44:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
  45:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
  46:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
  47:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #include <headers/hw_flash_ctrl.h>
  48:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #include <headers/hw_ints.h>
  49:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #include <headers/hw_nvic.h>
  50:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #include <headers/hw_sys_ctrl.h>
  51:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #include "cpu.h"
  52:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #include "debug.h"
  53:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #include "interrupt.h"
  54:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #include "sys_ctrl.h"
  55:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
  56:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
  57:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
  58:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
  59:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // Arrays that maps the "peripheral set" number (which is stored in the
  60:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // third nibble of the SYS_CTRL_PERIPH_* defines) to the SYSCTL register that
  61:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // contains the relevant bit for that peripheral.
  62:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
  63:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
  64:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
  65:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // Run mode registers
  66:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** static const uint32_t g_pui32RCGCRegs[] =
  67:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
  68:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_RCGCGPT,
  69:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_RCGCSSI,
  70:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_RCGCUART,
  71:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_RCGCI2C,
  72:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_RCGCSEC,
  73:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_RCGCRFC
  74:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** };
  75:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
  76:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // Sleep mode registers
  77:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** static const uint32_t g_pui32SCGCRegs[] =
  78:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
  79:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_SCGCGPT,
  80:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_SCGCSSI,
  81:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_SCGCUART,
  82:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_SCGCI2C,
  83:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_SCGCSEC,
  84:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_SCGCRFC
  85:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** };
  86:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
  87:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // Deep sleep mode registers
  88:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** static const uint32_t g_pui32DCGCRegs[] =
  89:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
  90:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_DCGCGPT,
  91:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_DCGCSSI,
  92:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_DCGCUART,
  93:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_DCGCI2C,
  94:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_DCGCSEC,
  95:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_DCGCRFC
  96:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** };
  97:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
  98:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // Reset registers
  99:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** static const uint32_t g_pui32SRRegs[] =
 100:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 101:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_SRGPT,
 102:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_SRSSI,
 103:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_SRUART,
 104:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_SRI2C,
 105:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     SYS_CTRL_SRSEC,
 106:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** };
 107:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 108:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // Masks for determining if a peripheral is enabled
 109:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** static const uint32_t g_pui32DieCfgMask[] =
 110:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 111:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     FLASH_CTRL_DIECFG1_GPTM0_EN,
 112:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     FLASH_CTRL_DIECFG1_SSI0_EN,
 113:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     FLASH_CTRL_DIECFG1_UART0_EN,
 114:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     FLASH_CTRL_DIECFG1_I2C_EN,
 115:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     FLASH_CTRL_DIECFG2_PKA_EN,
 116:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     FLASH_CTRL_DIECFG2_RF_CORE_EN
 117:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** };
 118:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 119:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 120:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 121:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // This macro extracts the array index out of the peripheral number.
 122:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 123:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 124:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #define SYS_CTRL_PERIPH_INDEX(a)  (((a) >> 8) & 0xf)
 125:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 126:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 127:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 128:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 129:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // This macro extracts the peripheral instance number and generates bit mask
 130:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 131:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 132:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #define SYS_CTRL_PERIPH_MASKBIT(a) (0x00000001 << ((a) & 0xf))
 133:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 134:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 135:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 136:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // This macro extracts the instance number out of the peripheral number.
 137:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 138:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 139:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #define SYS_CTRL_PERIPH_INSTANCE(a)  ((a) & 0xf)
 140:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 141:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 142:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 143:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \internal
 144:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Checks a peripheral identifier
 145:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 146:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32Peripheral is the peripheral identifier.
 147:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 148:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function determines if a peripheral identifier is valid.
 149:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 150:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return Returns \b true if the peripheral identifier is valid and \b false
 151:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! otherwise.
 152:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 153:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 154:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #ifdef ENABLE_ASSERT
 155:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** static bool
 156:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlPeripheralValid(uint32_t ui32Peripheral)
 157:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 158:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     return((ui32Peripheral == SYS_CTRL_PERIPH_GPT0)  ||
 159:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            (ui32Peripheral == SYS_CTRL_PERIPH_GPT1)  ||
 160:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            (ui32Peripheral == SYS_CTRL_PERIPH_GPT2)  ||
 161:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            (ui32Peripheral == SYS_CTRL_PERIPH_GPT3)  ||
 162:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            (ui32Peripheral == SYS_CTRL_PERIPH_SSI0)  ||
 163:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            (ui32Peripheral == SYS_CTRL_PERIPH_SSI1)  ||
 164:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            (ui32Peripheral == SYS_CTRL_PERIPH_UART0) ||
 165:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            (ui32Peripheral == SYS_CTRL_PERIPH_UART1) ||
 166:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            (ui32Peripheral == SYS_CTRL_PERIPH_I2C)   ||
 167:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            (ui32Peripheral == SYS_CTRL_PERIPH_PKA)   ||
 168:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            (ui32Peripheral == SYS_CTRL_PERIPH_AES)   ||
 169:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            (ui32Peripheral == SYS_CTRL_PERIPH_RFC));
 170:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 171:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #endif
 172:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 173:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 174:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 175:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 176:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Sets the general clocking of the device
 177:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 178:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param bExternalOsc32k is set to true for applications with
 179:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!        external 32kHz crystal.
 180:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param bInternalOsc selects internal 1-16MHz RC oscillator. If set to
 181:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!        false, the external 0-32MHz crystal is used.
 182:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32SysDiv System Clock Setting.
 183:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 184:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function configures the clocking of the device.
 185:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The oscillator used and the system clock divider settings are
 186:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! configured with this function.
 187:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 188:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The \e ui32SysDiv argument must be only one of the following values:
 189:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_SYSDIV_32MHZ, \b SYS_CTRL_SYSDIV_16MHZ,
 190:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_SYSDIV_8MHZ,  \b SYS_CTRL_SYSDIV_4MHZ,
 191:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_SYSDIV_2MHZ,  \b SYS_CTRL_SYSDIV_1MHZ,
 192:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_SYSDIV_500KHZ,\b SYS_CTRL_SYSDIV_250KHZ.
 193:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Note \b SYS_CTRL_SYSDIV_32MHZ can not be selected when Internal Oscillator
 194:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! is selected.
 195:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 196:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 197:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 198:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 199:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 200:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlClockSet(bool bExternalOsc32k, bool bInternalOsc,
 201:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****                 uint32_t ui32SysDiv)
 202:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
  77              		.loc 1 202 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 24
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81 0000 80B5     		push	{r7, lr}
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 7, -8
  84              		.cfi_offset 14, -4
  85 0002 86B0     		sub	sp, sp, #24
  86              		.cfi_def_cfa_offset 32
  87 0004 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  89 0006 0B46     		mov	r3, r1
  90 0008 3A60     		str	r2, [r7]
  91 000a 0246     		mov	r2, r0
  92 000c FA71     		strb	r2, [r7, #7]
  93 000e BB71     		strb	r3, [r7, #6]
 203:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32STA;
 204:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32Reg;
 205:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32TimeoutVal;
 206:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32Osc;
 207:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 208:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // check input parameters
 209:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT((ui32SysDiv == SYS_CTRL_SYSDIV_32MHZ  ||
 210:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             ui32SysDiv == SYS_CTRL_SYSDIV_16MHZ  ||
 211:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             ui32SysDiv == SYS_CTRL_SYSDIV_8MHZ   ||
 212:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             ui32SysDiv == SYS_CTRL_SYSDIV_4MHZ   ||
 213:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             ui32SysDiv == SYS_CTRL_SYSDIV_2MHZ   ||
 214:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             ui32SysDiv == SYS_CTRL_SYSDIV_1MHZ   ||
 215:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             ui32SysDiv == SYS_CTRL_SYSDIV_500KHZ ||
 216:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             ui32SysDiv == SYS_CTRL_SYSDIV_250KHZ) &&
 217:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            !((ui32SysDiv == SYS_CTRL_SYSDIV_32MHZ) && bInternalOsc));
 218:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 219:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 220:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Enable AMP detect to make sure XOSC starts correctly
 221:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 222:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     if(!bInternalOsc)
  94              		.loc 1 222 0
  95 0010 BB79     		ldrb	r3, [r7, #6]
  96 0012 83F00103 		eor	r3, r3, #1
  97 0016 DBB2     		uxtb	r3, r3
  98 0018 002B     		cmp	r3, #0
  99 001a 0DD0     		beq	.L2
 223:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 224:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Reg = HWREG(SYS_CTRL_CLOCK_CTRL) | SYS_CTRL_CLOCK_CTRL_AMP_DET;
 100              		.loc 1 224 0
 101 001c 4FF40053 		mov	r3, #8192
 102 0020 C4F20D03 		movt	r3, 16397
 103 0024 1B68     		ldr	r3, [r3]
 104 0026 43F40013 		orr	r3, r3, #2097152
 105 002a 3B61     		str	r3, [r7, #16]
 225:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         HWREG(SYS_CTRL_CLOCK_CTRL) = ui32Reg;
 106              		.loc 1 225 0
 107 002c 4FF40053 		mov	r3, #8192
 108 0030 C4F20D03 		movt	r3, 16397
 109 0034 3A69     		ldr	r2, [r7, #16]
 110 0036 1A60     		str	r2, [r3]
 111              	.L2:
 226:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 227:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 228:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 229:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Set 32kHz clock, Osc and SysDiv
 230:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 231:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32Reg = HWREG(SYS_CTRL_CLOCK_CTRL);
 112              		.loc 1 231 0
 113 0038 4FF40053 		mov	r3, #8192
 114 003c C4F20D03 		movt	r3, 16397
 115 0040 1B68     		ldr	r3, [r3]
 116 0042 3B61     		str	r3, [r7, #16]
 232:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32Reg &= ~(SYS_CTRL_CLOCK_CTRL_OSC32K | SYS_CTRL_CLOCK_CTRL_OSC |
 117              		.loc 1 232 0
 118 0044 3A69     		ldr	r2, [r7, #16]
 119 0046 4FF6F873 		movw	r3, #65528
 120 004a CFF6FE63 		movt	r3, 65278
 121 004e 1340     		ands	r3, r3, r2
 122 0050 3B61     		str	r3, [r7, #16]
 233:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****                  SYS_CTRL_CLOCK_CTRL_SYS_DIV_M);
 234:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     if(!bExternalOsc32k)
 123              		.loc 1 234 0
 124 0052 FB79     		ldrb	r3, [r7, #7]
 125 0054 83F00103 		eor	r3, r3, #1
 126 0058 DBB2     		uxtb	r3, r3
 127 005a 002B     		cmp	r3, #0
 128 005c 03D0     		beq	.L3
 235:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 236:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Reg |= SYS_CTRL_CLOCK_CTRL_OSC32K;
 129              		.loc 1 236 0
 130 005e 3B69     		ldr	r3, [r7, #16]
 131 0060 43F08073 		orr	r3, r3, #16777216
 132 0064 3B61     		str	r3, [r7, #16]
 133              	.L3:
 237:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 238:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32Osc = bInternalOsc ? SYS_CTRL_CLOCK_CTRL_OSC : 0;
 134              		.loc 1 238 0
 135 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 136 0068 002B     		cmp	r3, #0
 137 006a 02D0     		beq	.L4
 138              		.loc 1 238 0 is_stmt 0 discriminator 1
 139 006c 4FF48033 		mov	r3, #65536
 140 0070 00E0     		b	.L5
 141              	.L4:
 142              		.loc 1 238 0 discriminator 2
 143 0072 0023     		movs	r3, #0
 144              	.L5:
 145              		.loc 1 238 0 discriminator 3
 146 0074 BB60     		str	r3, [r7, #8]
 239:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32Reg |= ui32Osc;
 147              		.loc 1 239 0 is_stmt 1 discriminator 3
 148 0076 3A69     		ldr	r2, [r7, #16]
 149 0078 BB68     		ldr	r3, [r7, #8]
 150 007a 1343     		orrs	r3, r3, r2
 151 007c 3B61     		str	r3, [r7, #16]
 240:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32Reg |= ui32SysDiv;
 152              		.loc 1 240 0 discriminator 3
 153 007e 3A69     		ldr	r2, [r7, #16]
 154 0080 3B68     		ldr	r3, [r7]
 155 0082 1343     		orrs	r3, r3, r2
 156 0084 3B61     		str	r3, [r7, #16]
 241:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(SYS_CTRL_CLOCK_CTRL) = ui32Reg;
 157              		.loc 1 241 0 discriminator 3
 158 0086 4FF40053 		mov	r3, #8192
 159 008a C4F20D03 		movt	r3, 16397
 160 008e 3A69     		ldr	r2, [r7, #16]
 161 0090 1A60     		str	r2, [r3]
 242:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 243:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 244:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Note: This wait loop could potentially be removed, if caution
 245:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // is taken in code running after this call.
 246:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 247:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // If we have changed Osc settings, wait until change happens
 248:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 249:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32STA = HWREG(SYS_CTRL_CLOCK_STA);
 162              		.loc 1 249 0 discriminator 3
 163 0092 42F20403 		movw	r3, #8196
 164 0096 C4F20D03 		movt	r3, 16397
 165 009a 1B68     		ldr	r3, [r3]
 166 009c 7B61     		str	r3, [r7, #20]
 250:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32TimeoutVal = 0;
 167              		.loc 1 250 0 discriminator 3
 168 009e 0023     		movs	r3, #0
 169 00a0 FB60     		str	r3, [r7, #12]
 251:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     while((ui32Osc != (ui32STA & SYS_CTRL_CLOCK_CTRL_OSC)) &&
 170              		.loc 1 251 0 discriminator 3
 171 00a2 0BE0     		b	.L6
 172              	.L8:
 252:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             (ui32TimeoutVal < SYS_CTRL_TIMEOUT))
 253:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 254:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         SysCtrlDelay(16);
 173              		.loc 1 254 0
 174 00a4 1020     		movs	r0, #16
 175 00a6 FFF7FEFF 		bl	SysCtrlDelay
 255:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32STA = HWREG(SYS_CTRL_CLOCK_STA);
 176              		.loc 1 255 0
 177 00aa 42F20403 		movw	r3, #8196
 178 00ae C4F20D03 		movt	r3, 16397
 179 00b2 1B68     		ldr	r3, [r3]
 180 00b4 7B61     		str	r3, [r7, #20]
 256:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32TimeoutVal++;
 181              		.loc 1 256 0
 182 00b6 FB68     		ldr	r3, [r7, #12]
 183 00b8 0133     		adds	r3, r3, #1
 184 00ba FB60     		str	r3, [r7, #12]
 185              	.L6:
 251:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             (ui32TimeoutVal < SYS_CTRL_TIMEOUT))
 186              		.loc 1 251 0 discriminator 1
 187 00bc 7B69     		ldr	r3, [r7, #20]
 188 00be 03F48032 		and	r2, r3, #65536
 189 00c2 BB68     		ldr	r3, [r7, #8]
 190 00c4 9A42     		cmp	r2, r3
 191 00c6 04D0     		beq	.L1
 251:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             (ui32TimeoutVal < SYS_CTRL_TIMEOUT))
 192              		.loc 1 251 0 is_stmt 0 discriminator 2
 193 00c8 FA68     		ldr	r2, [r7, #12]
 194 00ca 4FF6FE73 		movw	r3, #65534
 195 00ce 9A42     		cmp	r2, r3
 196 00d0 E8D9     		bls	.L8
 197              	.L1:
 257:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 258:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(ui32TimeoutVal < SYS_CTRL_TIMEOUT);
 259:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 260:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** } // SysCtrlClockSet
 198              		.loc 1 260 0 is_stmt 1
 199 00d2 1837     		adds	r7, r7, #24
 200 00d4 BD46     		mov	sp, r7
 201              		@ sp needed
 202 00d6 80BD     		pop	{r7, pc}
 203              		.cfi_endproc
 204              	.LFE0:
 206              		.align	2
 207              		.global	SysCtrlClockGet
 208              		.thumb
 209              		.thumb_func
 211              	SysCtrlClockGet:
 212              	.LFB1:
 261:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 262:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 263:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 264:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 265:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Gets the processor clock rate
 266:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 267:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function determines the clock rate of the processor clock.
 268:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 269:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return The processor clock rate
 270:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 271:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 272:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** uint32_t
 273:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlClockGet(void)
 274:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 213              		.loc 1 274 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 16
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218 00d8 80B4     		push	{r7}
 219              		.cfi_def_cfa_offset 4
 220              		.cfi_offset 7, -4
 221 00da 85B0     		sub	sp, sp, #20
 222              		.cfi_def_cfa_offset 24
 223 00dc 00AF     		add	r7, sp, #0
 224              		.cfi_def_cfa_register 7
 275:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32Clk;
 276:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32STA;
 277:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32SysDiv;
 278:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 279:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32STA = HWREG(SYS_CTRL_CLOCK_STA);
 225              		.loc 1 279 0
 226 00de 42F20403 		movw	r3, #8196
 227 00e2 C4F20D03 		movt	r3, 16397
 228 00e6 1B68     		ldr	r3, [r3]
 229 00e8 BB60     		str	r3, [r7, #8]
 280:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32SysDiv =
 230              		.loc 1 280 0
 231 00ea BB68     		ldr	r3, [r7, #8]
 232 00ec 03F00703 		and	r3, r3, #7
 233 00f0 7B60     		str	r3, [r7, #4]
 281:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         (ui32STA & SYS_CTRL_CLOCK_STA_SYS_DIV_M) >> SYS_CTRL_CLOCK_STA_SYS_DIV_S;
 282:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32Clk = 0;
 234              		.loc 1 282 0
 235 00f2 0023     		movs	r3, #0
 236 00f4 FB60     		str	r3, [r7, #12]
 283:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 284:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     switch(ui32SysDiv)
 237              		.loc 1 284 0
 238 00f6 7B68     		ldr	r3, [r7, #4]
 239 00f8 072B     		cmp	r3, #7
 240 00fa 43D8     		bhi	.L10
 241 00fc 01A2     		adr	r2, .L12
 242 00fe 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 243 0102 00BF     		.p2align 2
 244              	.L12:
 245 0104 25010000 		.word	.L11+1
 246 0108 31010000 		.word	.L13+1
 247 010c 3D010000 		.word	.L14+1
 248 0110 49010000 		.word	.L15+1
 249 0114 55010000 		.word	.L16+1
 250 0118 61010000 		.word	.L17+1
 251 011c 6D010000 		.word	.L18+1
 252 0120 79010000 		.word	.L19+1
 253              	.L11:
 285:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 286:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_32MHZ:
 287:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_32MHZ;
 254              		.loc 1 287 0
 255 0124 4FF49043 		mov	r3, #18432
 256 0128 C0F2E813 		movt	r3, 488
 257 012c FB60     		str	r3, [r7, #12]
 288:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 258              		.loc 1 288 0
 259 012e 29E0     		b	.L10
 260              	.L13:
 289:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_16MHZ:
 290:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_16MHZ;
 261              		.loc 1 290 0
 262 0130 4FF41053 		mov	r3, #9216
 263 0134 C0F2F403 		movt	r3, 244
 264 0138 FB60     		str	r3, [r7, #12]
 291:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 265              		.loc 1 291 0
 266 013a 23E0     		b	.L10
 267              	.L14:
 292:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_8MHZ:
 293:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_8MHZ;
 268              		.loc 1 293 0
 269 013c 4FF49053 		mov	r3, #4608
 270 0140 C0F27A03 		movt	r3, 122
 271 0144 FB60     		str	r3, [r7, #12]
 294:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 272              		.loc 1 294 0
 273 0146 1DE0     		b	.L10
 274              	.L15:
 295:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_4MHZ:
 296:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_4MHZ;
 275              		.loc 1 296 0
 276 0148 4FF41063 		mov	r3, #2304
 277 014c C0F23D03 		movt	r3, 61
 278 0150 FB60     		str	r3, [r7, #12]
 297:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 279              		.loc 1 297 0
 280 0152 17E0     		b	.L10
 281              	.L16:
 298:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_2MHZ:
 299:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_2MHZ;
 282              		.loc 1 299 0
 283 0154 48F28043 		movw	r3, #33920
 284 0158 C0F21E03 		movt	r3, 30
 285 015c FB60     		str	r3, [r7, #12]
 300:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 286              		.loc 1 300 0
 287 015e 11E0     		b	.L10
 288              	.L17:
 301:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_1MHZ:
 302:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_1MHZ;
 289              		.loc 1 302 0
 290 0160 44F24023 		movw	r3, #16960
 291 0164 C0F20F03 		movt	r3, 15
 292 0168 FB60     		str	r3, [r7, #12]
 303:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 293              		.loc 1 303 0
 294 016a 0BE0     		b	.L10
 295              	.L18:
 304:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_500KHZ:
 305:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_500KHZ;
 296              		.loc 1 305 0
 297 016c 4AF22013 		movw	r3, #41248
 298 0170 C0F20703 		movt	r3, 7
 299 0174 FB60     		str	r3, [r7, #12]
 306:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 300              		.loc 1 306 0
 301 0176 05E0     		b	.L10
 302              	.L19:
 307:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_250KHZ:
 308:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_250KHZ;
 303              		.loc 1 308 0
 304 0178 4DF29003 		movw	r3, #53392
 305 017c C0F20303 		movt	r3, 3
 306 0180 FB60     		str	r3, [r7, #12]
 309:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 307              		.loc 1 309 0
 308 0182 00BF     		nop
 309              	.L10:
 310:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 311:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 312:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 313:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Return the computed clock rate.
 314:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 315:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     return(ui32Clk);
 310              		.loc 1 315 0
 311 0184 FB68     		ldr	r3, [r7, #12]
 316:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** } // SysCtrlClockGet
 312              		.loc 1 316 0
 313 0186 1846     		mov	r0, r3
 314 0188 1437     		adds	r7, r7, #20
 315 018a BD46     		mov	sp, r7
 316              		@ sp needed
 317 018c 5DF8047B 		ldr	r7, [sp], #4
 318 0190 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE1:
 322 0192 00BF     		.align	2
 323              		.global	SysCtrlIOClockSet
 324              		.thumb
 325              		.thumb_func
 327              	SysCtrlIOClockSet:
 328              	.LFB2:
 317:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 318:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 319:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 320:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Sets the IO clocking of the device
 321:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 322:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32IODiv System Clock Setting.
 323:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 324:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function configures the IO clocking of the device (that is, the
 325:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Baud rate clock for SSI and UART).
 326:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 327:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The \e ui32IODiv argument must be only one of the following values:
 328:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_SYSDIV_32MHZ, \b SYS_CTRL_SYSDIV_16MHZ,
 329:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_SYSDIV_8MHZ,  \b SYS_CTRL_SYSDIV_4MHZ,
 330:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_SYSDIV_2MHZ,  \b SYS_CTRL_SYSDIV_1MHZ,
 331:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_SYSDIV_500KHZ,\b SYS_CTRL_SYSDIV_250KHZ.
 332:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 333:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Note \b SYS_CTRL_SYSDIV_32MHZ cannot be selected when Internal Oscillator
 334:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! is selected.
 335:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 336:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 337:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 338:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 339:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 340:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlIOClockSet(uint32_t ui32IODiv)
 341:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 329              		.loc 1 341 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 16
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334 0194 80B4     		push	{r7}
 335              		.cfi_def_cfa_offset 4
 336              		.cfi_offset 7, -4
 337 0196 85B0     		sub	sp, sp, #20
 338              		.cfi_def_cfa_offset 24
 339 0198 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
 341 019a 7860     		str	r0, [r7, #4]
 342:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32RegVal;
 343:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 344:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // check input parameters
 345:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(ui32IODiv == SYS_CTRL_SYSDIV_32MHZ  ||
 346:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            ui32IODiv == SYS_CTRL_SYSDIV_16MHZ  ||
 347:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            ui32IODiv == SYS_CTRL_SYSDIV_8MHZ   ||
 348:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            ui32IODiv == SYS_CTRL_SYSDIV_4MHZ   ||
 349:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            ui32IODiv == SYS_CTRL_SYSDIV_2MHZ   ||
 350:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            ui32IODiv == SYS_CTRL_SYSDIV_1MHZ   ||
 351:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            ui32IODiv == SYS_CTRL_SYSDIV_500KHZ ||
 352:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            ui32IODiv == SYS_CTRL_SYSDIV_250KHZ);
 353:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 354:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32RegVal = HWREG(SYS_CTRL_CLOCK_CTRL);
 342              		.loc 1 354 0
 343 019c 4FF40053 		mov	r3, #8192
 344 01a0 C4F20D03 		movt	r3, 16397
 345 01a4 1B68     		ldr	r3, [r3]
 346 01a6 FB60     		str	r3, [r7, #12]
 355:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32RegVal &= ~SYS_CTRL_CLOCK_CTRL_IO_DIV_M;
 347              		.loc 1 355 0
 348 01a8 FB68     		ldr	r3, [r7, #12]
 349 01aa 23F4E063 		bic	r3, r3, #1792
 350 01ae FB60     		str	r3, [r7, #12]
 356:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32RegVal |= (ui32IODiv << SYS_CTRL_CLOCK_CTRL_IO_DIV_S);
 351              		.loc 1 356 0
 352 01b0 7B68     		ldr	r3, [r7, #4]
 353 01b2 1B02     		lsls	r3, r3, #8
 354 01b4 FA68     		ldr	r2, [r7, #12]
 355 01b6 1343     		orrs	r3, r3, r2
 356 01b8 FB60     		str	r3, [r7, #12]
 357:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(SYS_CTRL_CLOCK_CTRL) = ui32RegVal;
 357              		.loc 1 357 0
 358 01ba 4FF40053 		mov	r3, #8192
 359 01be C4F20D03 		movt	r3, 16397
 360 01c2 FA68     		ldr	r2, [r7, #12]
 361 01c4 1A60     		str	r2, [r3]
 358:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** } // SysCtrlIOClockSet
 362              		.loc 1 358 0
 363 01c6 1437     		adds	r7, r7, #20
 364 01c8 BD46     		mov	sp, r7
 365              		@ sp needed
 366 01ca 5DF8047B 		ldr	r7, [sp], #4
 367 01ce 7047     		bx	lr
 368              		.cfi_endproc
 369              	.LFE2:
 371              		.align	2
 372              		.global	SysCtrlIOClockGet
 373              		.thumb
 374              		.thumb_func
 376              	SysCtrlIOClockGet:
 377              	.LFB3:
 359:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 360:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 361:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 362:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 363:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Gets the IO clock rate
 364:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 365:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function returns the IO clocking of the device, i.e. the Baud
 366:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! rate clock for SSI and UART.
 367:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 368:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return The IO clock rate
 369:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 370:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 371:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** uint32_t
 372:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlIOClockGet(void)
 373:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 378              		.loc 1 373 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 16
 381              		@ frame_needed = 1, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383 01d0 80B4     		push	{r7}
 384              		.cfi_def_cfa_offset 4
 385              		.cfi_offset 7, -4
 386 01d2 85B0     		sub	sp, sp, #20
 387              		.cfi_def_cfa_offset 24
 388 01d4 00AF     		add	r7, sp, #0
 389              		.cfi_def_cfa_register 7
 374:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32Clk;
 375:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32STA;
 376:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32IODiv;
 377:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 378:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32STA = HWREG(SYS_CTRL_CLOCK_STA);
 390              		.loc 1 378 0
 391 01d6 42F20403 		movw	r3, #8196
 392 01da C4F20D03 		movt	r3, 16397
 393 01de 1B68     		ldr	r3, [r3]
 394 01e0 BB60     		str	r3, [r7, #8]
 379:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32IODiv =
 380:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         (ui32STA & SYS_CTRL_CLOCK_STA_IO_DIV_M) >> SYS_CTRL_CLOCK_STA_IO_DIV_S;
 395              		.loc 1 380 0
 396 01e2 BB68     		ldr	r3, [r7, #8]
 397 01e4 03F4E063 		and	r3, r3, #1792
 379:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32IODiv =
 398              		.loc 1 379 0
 399 01e8 1B0A     		lsrs	r3, r3, #8
 400 01ea 7B60     		str	r3, [r7, #4]
 381:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 382:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32Clk = 0;
 401              		.loc 1 382 0
 402 01ec 0023     		movs	r3, #0
 403 01ee FB60     		str	r3, [r7, #12]
 383:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 384:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     switch(ui32IODiv)
 404              		.loc 1 384 0
 405 01f0 7B68     		ldr	r3, [r7, #4]
 406 01f2 072B     		cmp	r3, #7
 407 01f4 42D8     		bhi	.L23
 408 01f6 01A2     		adr	r2, .L25
 409 01f8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 410              		.p2align 2
 411              	.L25:
 412 01fc 1D020000 		.word	.L24+1
 413 0200 29020000 		.word	.L26+1
 414 0204 35020000 		.word	.L27+1
 415 0208 41020000 		.word	.L28+1
 416 020c 4D020000 		.word	.L29+1
 417 0210 59020000 		.word	.L30+1
 418 0214 65020000 		.word	.L31+1
 419 0218 71020000 		.word	.L32+1
 420              	.L24:
 385:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 386:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_32MHZ:
 387:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_32MHZ;
 421              		.loc 1 387 0
 422 021c 4FF49043 		mov	r3, #18432
 423 0220 C0F2E813 		movt	r3, 488
 424 0224 FB60     		str	r3, [r7, #12]
 388:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 425              		.loc 1 388 0
 426 0226 29E0     		b	.L23
 427              	.L26:
 389:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_16MHZ:
 390:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_16MHZ;
 428              		.loc 1 390 0
 429 0228 4FF41053 		mov	r3, #9216
 430 022c C0F2F403 		movt	r3, 244
 431 0230 FB60     		str	r3, [r7, #12]
 391:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 432              		.loc 1 391 0
 433 0232 23E0     		b	.L23
 434              	.L27:
 392:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_8MHZ:
 393:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_8MHZ;
 435              		.loc 1 393 0
 436 0234 4FF49053 		mov	r3, #4608
 437 0238 C0F27A03 		movt	r3, 122
 438 023c FB60     		str	r3, [r7, #12]
 394:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 439              		.loc 1 394 0
 440 023e 1DE0     		b	.L23
 441              	.L28:
 395:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_4MHZ:
 396:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_4MHZ;
 442              		.loc 1 396 0
 443 0240 4FF41063 		mov	r3, #2304
 444 0244 C0F23D03 		movt	r3, 61
 445 0248 FB60     		str	r3, [r7, #12]
 397:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 446              		.loc 1 397 0
 447 024a 17E0     		b	.L23
 448              	.L29:
 398:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_2MHZ:
 399:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_2MHZ;
 449              		.loc 1 399 0
 450 024c 48F28043 		movw	r3, #33920
 451 0250 C0F21E03 		movt	r3, 30
 452 0254 FB60     		str	r3, [r7, #12]
 400:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 453              		.loc 1 400 0
 454 0256 11E0     		b	.L23
 455              	.L30:
 401:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_1MHZ:
 402:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_1MHZ;
 456              		.loc 1 402 0
 457 0258 44F24023 		movw	r3, #16960
 458 025c C0F20F03 		movt	r3, 15
 459 0260 FB60     		str	r3, [r7, #12]
 403:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 460              		.loc 1 403 0
 461 0262 0BE0     		b	.L23
 462              	.L31:
 404:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_500KHZ:
 405:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_500KHZ;
 463              		.loc 1 405 0
 464 0264 4AF22013 		movw	r3, #41248
 465 0268 C0F20703 		movt	r3, 7
 466 026c FB60     		str	r3, [r7, #12]
 406:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 467              		.loc 1 406 0
 468 026e 05E0     		b	.L23
 469              	.L32:
 407:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     case SYS_CTRL_SYSDIV_250KHZ:
 408:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Clk = SYS_CTRL_250KHZ;
 470              		.loc 1 408 0
 471 0270 4DF29003 		movw	r3, #53392
 472 0274 C0F20303 		movt	r3, 3
 473 0278 FB60     		str	r3, [r7, #12]
 409:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         break;
 474              		.loc 1 409 0
 475 027a 00BF     		nop
 476              	.L23:
 410:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 411:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 412:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 413:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Return the computed clock rate.
 414:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 415:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     return(ui32Clk);
 477              		.loc 1 415 0
 478 027c FB68     		ldr	r3, [r7, #12]
 416:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** } // SysCtrlIOClockGet
 479              		.loc 1 416 0
 480 027e 1846     		mov	r0, r3
 481 0280 1437     		adds	r7, r7, #20
 482 0282 BD46     		mov	sp, r7
 483              		@ sp needed
 484 0284 5DF8047B 		ldr	r7, [sp], #4
 485 0288 7047     		bx	lr
 486              		.cfi_endproc
 487              	.LFE3:
 489 028a 00BF     		.align	2
 490              		.global	SysCtrlDelay
 491              		.thumb
 492              		.thumb_func
 494              	SysCtrlDelay:
 495              	.LFB4:
 417:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 418:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 419:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 420:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 421:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Provides a small delay
 422:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 423:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32Count is the number of delay loop iterations to perform.
 424:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 425:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function provides a means of generating a constant length delay and
 426:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! is written in assembly to keep the delay consistent across tool chains,
 427:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! avoiding the need to tune the delay based on the tool chain in use.
 428:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 429:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The loop takes 3 cycles/loop.
 430:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 431:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 432:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 433:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 434:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #if defined(__ICCARM__) || defined(DOXYGEN)
 435:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 436:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlDelay(uint32_t ui32Count)
 437:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 438:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     __asm("    subs    r0, #1\n"
 439:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****           "    bne.n   SysCtrlDelay\n"
 440:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****           "    bx      lr");
 441:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 442:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #endif
 443:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #if defined(__GNUC__)
 444:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void __attribute__((naked))
 445:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlDelay(uint32_t ui32Count)
 446:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 496              		.loc 1 446 0
 497              		.cfi_startproc
 498              		@ Naked Function: prologue and epilogue provided by programmer.
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 1, uses_anonymous_args = 0
 447:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     __asm("    subs    r0, #1\n"
 501              		.loc 1 447 0
 502              	@ 447 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c" 1
 503 028c 0138     		    subs    r0, #1
 504 028e 7FF4FEAF 	    bne     SysCtrlDelay
 505 0292 7047     	    bx      lr
 506              	@ 0 "" 2
 448:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****           "    bne     SysCtrlDelay\n"
 449:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****           "    bx      lr");
 450:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 507              		.loc 1 450 0
 508              		.thumb
 509              		.cfi_endproc
 510              	.LFE4:
 512              		.align	2
 513              		.global	SysCtrlReset
 514              		.thumb
 515              		.thumb_func
 517              	SysCtrlReset:
 518              	.LFB5:
 451:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #endif
 452:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #if defined(__KEIL__) || defined(__ARMCC_VERSION)
 453:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** __asm void
 454:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlDelay(uint32_t ui32Count)
 455:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 456:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     subs    r0, #1;
 457:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     bne     SysCtrlDelay;
 458:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     bx      lr;
 459:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 460:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #endif
 461:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 462:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // For CCS implement this function in pure assembly.  This prevents the TI
 463:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** // compiler from doing funny things with the optimizer.
 464:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 465:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #if defined(__TI_COMPILER_VERSION__)
 466:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** __asm("    .sect \".text:SysCtrlDelay\"\n"
 467:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****       "    .clink\n"
 468:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****       "    .thumbfunc SysCtrlDelay\n"
 469:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****       "    .thumb\n"
 470:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****       "    .global SysCtrlDelay\n"
 471:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****       "SysCtrlDelay:\n"
 472:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****       "    subs r0, #1\n"
 473:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****       "    bne.n SysCtrlDelay\n"
 474:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****       "    bx lr\n");
 475:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #endif
 476:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 477:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 478:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 479:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 480:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Resets the device
 481:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 482:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function performs a software reset of the entire device.  The
 483:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! processor and all peripherals are reset and all device registers are
 484:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! returned to their default values.
 485:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 486:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return This function does not return.
 487:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 488:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 489:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 490:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlReset(void)
 491:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 519              		.loc 1 491 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0294 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0296 00AF     		add	r7, sp, #0
 528              		.cfi_def_cfa_register 7
 492:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 493:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Perform a software reset request.  This request causes the device to
 494:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // reset, no further code is executed.
 495:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 496:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(SYS_CTRL_PWRDBG) = SYS_CTRL_PWRDBG_FORCE_WARM_RESET;
 529              		.loc 1 496 0
 530 0298 42F27403 		movw	r3, #8308
 531 029c C4F20D03 		movt	r3, 16397
 532 02a0 0822     		movs	r2, #8
 533 02a2 1A60     		str	r2, [r3]
 534              	.L36:
 497:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 498:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 499:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // The device should have reset, so this should never be reached.  Just in
 500:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // case, loop forever.
 501:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 502:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     while(1)
 503:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 504:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 535              		.loc 1 504 0 discriminator 1
 536 02a4 FEE7     		b	.L36
 537              		.cfi_endproc
 538              	.LFE5:
 540 02a6 00BF     		.align	2
 541              		.global	SysCtrlSleep
 542              		.thumb
 543              		.thumb_func
 545              	SysCtrlSleep:
 546              	.LFB6:
 505:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 506:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 507:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 508:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 509:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 510:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Puts the processor into sleep mode
 511:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 512:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function places the processor into sleep mode and does not return
 513:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! until the processor returns to run mode.  The peripherals that are enabled
 514:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! by SysCtrlPeripheralSleepEnable() continue to operate and can wake up the
 515:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! processor.
 516:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 517:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \sa SysCtrlPeripheralSleepEnable()
 518:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 519:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 520:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 521:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 522:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 523:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlSleep(void)
 524:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 547              		.loc 1 524 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 02a8 80B5     		push	{r7, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 02aa 00AF     		add	r7, sp, #0
 556              		.cfi_def_cfa_register 7
 525:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 526:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Wait for an interrupt.
 527:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 528:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     CPUwfi();
 557              		.loc 1 528 0
 558 02ac FFF7FEFF 		bl	CPUwfi
 529:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 559              		.loc 1 529 0
 560 02b0 80BD     		pop	{r7, pc}
 561              		.cfi_endproc
 562              	.LFE6:
 564 02b2 00BF     		.align	2
 565              		.global	SysCtrlDeepSleep
 566              		.thumb
 567              		.thumb_func
 569              	SysCtrlDeepSleep:
 570              	.LFB7:
 530:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 531:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 532:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 533:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 534:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Puts the processor into deep-sleep mode
 535:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 536:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function places the processor into deep-sleep mode and does not return
 537:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! until the processor returns to run mode.  The peripherals that are enabled
 538:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! by SysCtrlPeripheralDeepSleepEnable() continue to operate and can wake up
 539:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! the processor (if not in power mode 1, 2, or 3).
 540:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Note the power mode should be set before going into deep sleep.
 541:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 542:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \sa SysCtrlPowerModeSet(), SysCtrlPeripheralDeepSleepEnable()
 543:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 544:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 545:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 546:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 547:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 548:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlDeepSleep(void)
 549:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 571              		.loc 1 549 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 8
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 02b4 80B5     		push	{r7, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
 579 02b6 82B0     		sub	sp, sp, #8
 580              		.cfi_def_cfa_offset 16
 581 02b8 00AF     		add	r7, sp, #0
 582              		.cfi_def_cfa_register 7
 550:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #ifndef NO_CLOCK_DIVIDER_RESTORE
 551:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     bool  bRestoreSys;
 552:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     bool  bRestoreIO;
 553:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32Reg;
 554:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 555:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32Reg = HWREG(SYS_CTRL_CLOCK_STA);
 583              		.loc 1 555 0
 584 02ba 42F20403 		movw	r3, #8196
 585 02be C4F20D03 		movt	r3, 16397
 586 02c2 1B68     		ldr	r3, [r3]
 587 02c4 7B60     		str	r3, [r7, #4]
 556:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     bRestoreSys = (ui32Reg & SYS_CTRL_CLOCK_STA_SYS_DIV_M)==0;
 588              		.loc 1 556 0
 589 02c6 7B68     		ldr	r3, [r7, #4]
 590 02c8 03F00703 		and	r3, r3, #7
 591 02cc 002B     		cmp	r3, #0
 592 02ce 14BF     		ite	ne
 593 02d0 0023     		movne	r3, #0
 594 02d2 0123     		moveq	r3, #1
 595 02d4 FB70     		strb	r3, [r7, #3]
 557:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     bRestoreIO  = (ui32Reg & SYS_CTRL_CLOCK_STA_IO_DIV_M)==0;
 596              		.loc 1 557 0
 597 02d6 7B68     		ldr	r3, [r7, #4]
 598 02d8 03F4E063 		and	r3, r3, #1792
 599 02dc 002B     		cmp	r3, #0
 600 02de 14BF     		ite	ne
 601 02e0 0023     		movne	r3, #0
 602 02e2 0123     		moveq	r3, #1
 603 02e4 BB70     		strb	r3, [r7, #2]
 558:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     if(bRestoreSys || bRestoreIO)
 604              		.loc 1 558 0
 605 02e6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 606 02e8 002B     		cmp	r3, #0
 607 02ea 02D1     		bne	.L39
 608              		.loc 1 558 0 is_stmt 0 discriminator 1
 609 02ec BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 610 02ee 002B     		cmp	r3, #0
 611 02f0 1ED0     		beq	.L40
 612              	.L39:
 559:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 560:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Reg = HWREG(SYS_CTRL_CLOCK_CTRL);
 613              		.loc 1 560 0 is_stmt 1
 614 02f2 4FF40053 		mov	r3, #8192
 615 02f6 C4F20D03 		movt	r3, 16397
 616 02fa 1B68     		ldr	r3, [r3]
 617 02fc 7B60     		str	r3, [r7, #4]
 561:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Reg |= bRestoreSys? 0x1:0x0;
 618              		.loc 1 561 0
 619 02fe FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 620 0300 002B     		cmp	r3, #0
 621 0302 01D0     		beq	.L41
 622              		.loc 1 561 0 is_stmt 0 discriminator 1
 623 0304 0123     		movs	r3, #1
 624 0306 00E0     		b	.L42
 625              	.L41:
 626              		.loc 1 561 0 discriminator 2
 627 0308 0023     		movs	r3, #0
 628              	.L42:
 629              		.loc 1 561 0 discriminator 3
 630 030a 7A68     		ldr	r2, [r7, #4]
 631 030c 1343     		orrs	r3, r3, r2
 632 030e 7B60     		str	r3, [r7, #4]
 562:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Reg |= bRestoreIO? 0x100:0x0;
 633              		.loc 1 562 0 is_stmt 1 discriminator 3
 634 0310 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 635 0312 002B     		cmp	r3, #0
 636 0314 02D0     		beq	.L43
 637              		.loc 1 562 0 is_stmt 0 discriminator 1
 638 0316 4FF48073 		mov	r3, #256
 639 031a 00E0     		b	.L44
 640              	.L43:
 641              		.loc 1 562 0 discriminator 2
 642 031c 0023     		movs	r3, #0
 643              	.L44:
 644              		.loc 1 562 0 discriminator 3
 645 031e 7A68     		ldr	r2, [r7, #4]
 646 0320 1343     		orrs	r3, r3, r2
 647 0322 7B60     		str	r3, [r7, #4]
 563:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         HWREG(SYS_CTRL_CLOCK_CTRL) = ui32Reg;
 648              		.loc 1 563 0 is_stmt 1 discriminator 3
 649 0324 4FF40053 		mov	r3, #8192
 650 0328 C4F20D03 		movt	r3, 16397
 651 032c 7A68     		ldr	r2, [r7, #4]
 652 032e 1A60     		str	r2, [r3]
 653              	.L40:
 564:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 565:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #endif
 566:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     
 567:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 568:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Enable deep-sleep.
 569:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 570:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(NVIC_SYS_CTRL) |= NVIC_SYS_CTRL_SLEEPDEEP;
 654              		.loc 1 570 0
 655 0330 4EF61053 		movw	r3, #60688
 656 0334 CEF20003 		movt	r3, 57344
 657 0338 4EF61052 		movw	r2, #60688
 658 033c CEF20002 		movt	r2, 57344
 659 0340 1268     		ldr	r2, [r2]
 660 0342 42F00402 		orr	r2, r2, #4
 661 0346 1A60     		str	r2, [r3]
 571:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 572:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 573:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Wait for an interrupt.
 574:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 575:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     CPUwfi();
 662              		.loc 1 575 0
 663 0348 FFF7FEFF 		bl	CPUwfi
 576:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 577:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 578:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Disable deep-sleep so that a future sleep will work correctly.
 579:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     //
 580:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(NVIC_SYS_CTRL) &= ~(NVIC_SYS_CTRL_SLEEPDEEP);
 664              		.loc 1 580 0
 665 034c 4EF61053 		movw	r3, #60688
 666 0350 CEF20003 		movt	r3, 57344
 667 0354 4EF61052 		movw	r2, #60688
 668 0358 CEF20002 		movt	r2, 57344
 669 035c 1268     		ldr	r2, [r2]
 670 035e 22F00402 		bic	r2, r2, #4
 671 0362 1A60     		str	r2, [r3]
 581:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 582:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #ifndef NO_CLOCK_DIVIDER_RESTORE
 583:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     if(bRestoreSys || bRestoreIO)
 672              		.loc 1 583 0
 673 0364 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 674 0366 002B     		cmp	r3, #0
 675 0368 02D1     		bne	.L45
 676              		.loc 1 583 0 is_stmt 0 discriminator 1
 677 036a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 678 036c 002B     		cmp	r3, #0
 679 036e 21D0     		beq	.L38
 680              	.L45:
 584:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 585:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Reg = HWREG(SYS_CTRL_CLOCK_CTRL);
 681              		.loc 1 585 0 is_stmt 1
 682 0370 4FF40053 		mov	r3, #8192
 683 0374 C4F20D03 		movt	r3, 16397
 684 0378 1B68     		ldr	r3, [r3]
 685 037a 7B60     		str	r3, [r7, #4]
 586:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Reg &= bRestoreSys ? ~SYS_CTRL_CLOCK_CTRL_SYS_DIV_M : 0xffffffff;
 686              		.loc 1 586 0
 687 037c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 688 037e 002B     		cmp	r3, #0
 689 0380 02D0     		beq	.L47
 690              		.loc 1 586 0 is_stmt 0 discriminator 1
 691 0382 6FF00703 		mvn	r3, #7
 692 0386 01E0     		b	.L48
 693              	.L47:
 694              		.loc 1 586 0 discriminator 2
 695 0388 4FF0FF33 		mov	r3, #-1
 696              	.L48:
 697              		.loc 1 586 0 discriminator 3
 698 038c 7A68     		ldr	r2, [r7, #4]
 699 038e 1340     		ands	r3, r3, r2
 700 0390 7B60     		str	r3, [r7, #4]
 587:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32Reg &= bRestoreIO ?  ~SYS_CTRL_CLOCK_CTRL_IO_DIV_M : 0xffffffff;
 701              		.loc 1 587 0 is_stmt 1 discriminator 3
 702 0392 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 703 0394 002B     		cmp	r3, #0
 704 0396 02D0     		beq	.L49
 705              		.loc 1 587 0 is_stmt 0 discriminator 1
 706 0398 6FF4E063 		mvn	r3, #1792
 707 039c 01E0     		b	.L50
 708              	.L49:
 709              		.loc 1 587 0 discriminator 2
 710 039e 4FF0FF33 		mov	r3, #-1
 711              	.L50:
 712              		.loc 1 587 0 discriminator 3
 713 03a2 7A68     		ldr	r2, [r7, #4]
 714 03a4 1340     		ands	r3, r3, r2
 715 03a6 7B60     		str	r3, [r7, #4]
 588:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         HWREG(SYS_CTRL_CLOCK_CTRL) = ui32Reg;
 716              		.loc 1 588 0 is_stmt 1 discriminator 3
 717 03a8 4FF40053 		mov	r3, #8192
 718 03ac C4F20D03 		movt	r3, 16397
 719 03b0 7A68     		ldr	r2, [r7, #4]
 720 03b2 1A60     		str	r2, [r3]
 721              	.L38:
 589:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 590:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** #endif
 591:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 722              		.loc 1 591 0
 723 03b4 0837     		adds	r7, r7, #8
 724 03b6 BD46     		mov	sp, r7
 725              		@ sp needed
 726 03b8 80BD     		pop	{r7, pc}
 727              		.cfi_endproc
 728              	.LFE7:
 730 03ba 00BF     		.align	2
 731              		.global	SysCtrlPeripheralPresent
 732              		.thumb
 733              		.thumb_func
 735              	SysCtrlPeripheralPresent:
 736              	.LFB8:
 592:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 593:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 594:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 595:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 596:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 597:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Determines if a peripheral is present
 598:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 599:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32Peripheral is the peripheral in question.
 600:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 601:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Determines if a particular peripheral is present in the device (that is,
 602:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! is not permanently disabled).
 603:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 604:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The \e ui32Peripheral parameter must be one of the values:
 605:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT0 , \b SYS_CTRL_PERIPH_GPT1,
 606:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT2,  \b SYS_CTRL_PERIPH_GPT3,
 607:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_SSI0,  \b SYS_CTRL_PERIPH_SSI1,
 608:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_UART0, \b SYS_CTRL_PERIPH_UART1,
 609:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_I2C,   \b SYS_CTRL_PERIPH_PKA,
 610:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_AES,   \b SYS_CTRL_PERIPH_RFC.
 611:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 612:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return Returns \b true if the specified peripheral is present and \b false
 613:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! if it is permanently disabled.
 614:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 615:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 616:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** bool
 617:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlPeripheralPresent(uint32_t ui32Peripheral)
 618:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 737              		.loc 1 618 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 16
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 03bc 80B4     		push	{r7}
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 03be 85B0     		sub	sp, sp, #20
 746              		.cfi_def_cfa_offset 24
 747 03c0 00AF     		add	r7, sp, #0
 748              		.cfi_def_cfa_register 7
 749 03c2 7860     		str	r0, [r7, #4]
 619:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32DieCfg;
 620:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32Mask;
 621:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 622:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Check the arguments.
 623:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(SysCtrlPeripheralValid(ui32Peripheral));
 624:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 625:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     if(SYS_CTRL_PERIPH_INDEX(ui32Peripheral) ==
 750              		.loc 1 625 0
 751 03c4 7B68     		ldr	r3, [r7, #4]
 752 03c6 1B0A     		lsrs	r3, r3, #8
 753 03c8 03F00F03 		and	r3, r3, #15
 754 03cc 042B     		cmp	r3, #4
 755 03ce 0BD0     		beq	.L52
 626:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             SYS_CTRL_PERIPH_INDEX(SYS_CTRL_PERIPH_PKA) ||
 627:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             SYS_CTRL_PERIPH_INDEX(ui32Peripheral) ==
 756              		.loc 1 627 0
 757 03d0 7B68     		ldr	r3, [r7, #4]
 758 03d2 1B0A     		lsrs	r3, r3, #8
 759 03d4 03F00F03 		and	r3, r3, #15
 626:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             SYS_CTRL_PERIPH_INDEX(SYS_CTRL_PERIPH_PKA) ||
 760              		.loc 1 626 0
 761 03d8 042B     		cmp	r3, #4
 762 03da 05D0     		beq	.L52
 628:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             SYS_CTRL_PERIPH_INDEX(SYS_CTRL_PERIPH_AES) ||
 629:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             SYS_CTRL_PERIPH_INDEX(ui32Peripheral) ==
 763              		.loc 1 629 0
 764 03dc 7B68     		ldr	r3, [r7, #4]
 765 03de 1B0A     		lsrs	r3, r3, #8
 766 03e0 03F00F03 		and	r3, r3, #15
 628:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             SYS_CTRL_PERIPH_INDEX(SYS_CTRL_PERIPH_AES) ||
 767              		.loc 1 628 0
 768 03e4 052B     		cmp	r3, #5
 769 03e6 06D1     		bne	.L53
 770              	.L52:
 630:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****             SYS_CTRL_PERIPH_INDEX(SYS_CTRL_PERIPH_RFC))
 631:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 632:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32DieCfg = HWREG(FLASH_CTRL_DIECFG2);
 771              		.loc 1 632 0
 772 03e8 43F21C03 		movw	r3, #12316
 773 03ec C4F20D03 		movt	r3, 16397
 774 03f0 1B68     		ldr	r3, [r3]
 775 03f2 FB60     		str	r3, [r7, #12]
 776 03f4 05E0     		b	.L54
 777              	.L53:
 633:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 634:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     else
 635:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 636:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ui32DieCfg = HWREG(FLASH_CTRL_DIECFG1);
 778              		.loc 1 636 0
 779 03f6 43F21803 		movw	r3, #12312
 780 03fa C4F20D03 		movt	r3, 16397
 781 03fe 1B68     		ldr	r3, [r3]
 782 0400 FB60     		str	r3, [r7, #12]
 783              	.L54:
 637:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 638:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 639:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32Mask = (g_pui32DieCfgMask[SYS_CTRL_PERIPH_INDEX(ui32Peripheral)] <<
 784              		.loc 1 639 0
 785 0402 7B68     		ldr	r3, [r7, #4]
 786 0404 1B0A     		lsrs	r3, r3, #8
 787 0406 03F00F02 		and	r2, r3, #15
 788 040a 40F20003 		movw	r3, #:lower16:g_pui32DieCfgMask
 789 040e C0F20003 		movt	r3, #:upper16:g_pui32DieCfgMask
 790 0412 53F82220 		ldr	r2, [r3, r2, lsl #2]
 791 0416 7B68     		ldr	r3, [r7, #4]
 792 0418 03F00F03 		and	r3, r3, #15
 793 041c 02FA03F3 		lsl	r3, r2, r3
 794 0420 BB60     		str	r3, [r7, #8]
 640:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****                 SYS_CTRL_PERIPH_INSTANCE(ui32Peripheral));
 641:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 642:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Mask with correct  mask and determine if this peripheral is
 643:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // permanently disabled.
 644:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     if(ui32DieCfg & ui32Mask)
 795              		.loc 1 644 0
 796 0422 FA68     		ldr	r2, [r7, #12]
 797 0424 BB68     		ldr	r3, [r7, #8]
 798 0426 1340     		ands	r3, r3, r2
 799 0428 002B     		cmp	r3, #0
 800 042a 01D0     		beq	.L55
 645:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 646:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         return(true);
 801              		.loc 1 646 0
 802 042c 0123     		movs	r3, #1
 803 042e 00E0     		b	.L56
 804              	.L55:
 647:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 648:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     else
 649:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     {
 650:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         return(false);
 805              		.loc 1 650 0
 806 0430 0023     		movs	r3, #0
 807              	.L56:
 651:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     }
 652:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 808              		.loc 1 652 0
 809 0432 1846     		mov	r0, r3
 810 0434 1437     		adds	r7, r7, #20
 811 0436 BD46     		mov	sp, r7
 812              		@ sp needed
 813 0438 5DF8047B 		ldr	r7, [sp], #4
 814 043c 7047     		bx	lr
 815              		.cfi_endproc
 816              	.LFE8:
 818 043e 00BF     		.align	2
 819              		.global	SysCtrlPeripheralReset
 820              		.thumb
 821              		.thumb_func
 823              	SysCtrlPeripheralReset:
 824              	.LFB9:
 653:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 654:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 655:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 656:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Performs a software reset of a peripheral
 657:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 658:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32Peripheral is the peripheral to reset.
 659:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 660:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function performs a software reset of the specified peripheral.  An
 661:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! individual peripheral reset signal is asserted for a brief period and then
 662:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! deasserted, leaving the peripheral in a operating state but in its reset
 663:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! condition.
 664:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 665:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The \e ui32Peripheral parameter must be one of the values:
 666:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT0 , \b SYS_CTRL_PERIPH_GPT1,
 667:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT2,  \b SYS_CTRL_PERIPH_GPT3,
 668:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_SSI0,  \b SYS_CTRL_PERIPH_SSI1,
 669:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_UART0, \b SYS_CTRL_PERIPH_UART1,
 670:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_I2C,   \b SYS_CTRL_PERIPH_PKA,
 671:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_AES.
 672:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 673:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 674:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 675:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 676:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 677:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlPeripheralReset(uint32_t ui32Peripheral)
 678:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 825              		.loc 1 678 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 16
 828              		@ frame_needed = 1, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830 0440 80B4     		push	{r7}
 831              		.cfi_def_cfa_offset 4
 832              		.cfi_offset 7, -4
 833 0442 85B0     		sub	sp, sp, #20
 834              		.cfi_def_cfa_offset 24
 835 0444 00AF     		add	r7, sp, #0
 836              		.cfi_def_cfa_register 7
 837 0446 7860     		str	r0, [r7, #4]
 679:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     volatile uint32_t ui32Delay;
 680:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 681:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Check the arguments.
 682:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(SysCtrlPeripheralValid(ui32Peripheral));
 683:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(!(ui32Peripheral == SYS_CTRL_PERIPH_RFC));
 684:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 685:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Put the peripheral into the reset state.
 686:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(g_pui32SRRegs[SYS_CTRL_PERIPH_INDEX(ui32Peripheral)]) |=
 838              		.loc 1 686 0
 839 0448 7B68     		ldr	r3, [r7, #4]
 840 044a 1B0A     		lsrs	r3, r3, #8
 841 044c 03F00F02 		and	r2, r3, #15
 842 0450 40F20003 		movw	r3, #:lower16:g_pui32SRRegs
 843 0454 C0F20003 		movt	r3, #:upper16:g_pui32SRRegs
 844 0458 53F82230 		ldr	r3, [r3, r2, lsl #2]
 845 045c 1A46     		mov	r2, r3
 846 045e 7B68     		ldr	r3, [r7, #4]
 847 0460 1B0A     		lsrs	r3, r3, #8
 848 0462 03F00F01 		and	r1, r3, #15
 849 0466 40F20003 		movw	r3, #:lower16:g_pui32SRRegs
 850 046a C0F20003 		movt	r3, #:upper16:g_pui32SRRegs
 851 046e 53F82130 		ldr	r3, [r3, r1, lsl #2]
 852 0472 1968     		ldr	r1, [r3]
 687:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 853              		.loc 1 687 0
 854 0474 7B68     		ldr	r3, [r7, #4]
 855 0476 03F00F03 		and	r3, r3, #15
 856 047a 0120     		movs	r0, #1
 857 047c 00FA03F3 		lsl	r3, r0, r3
 686:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 858              		.loc 1 686 0
 859 0480 0B43     		orrs	r3, r3, r1
 860 0482 1360     		str	r3, [r2]
 688:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 689:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Delay for a little bit.
 690:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     for(ui32Delay = 0; ui32Delay < 16; ui32Delay++) { }
 861              		.loc 1 690 0
 862 0484 0023     		movs	r3, #0
 863 0486 FB60     		str	r3, [r7, #12]
 864 0488 02E0     		b	.L58
 865              	.L59:
 866              		.loc 1 690 0 is_stmt 0 discriminator 2
 867 048a FB68     		ldr	r3, [r7, #12]
 868 048c 0133     		adds	r3, r3, #1
 869 048e FB60     		str	r3, [r7, #12]
 870              	.L58:
 871              		.loc 1 690 0 discriminator 1
 872 0490 FB68     		ldr	r3, [r7, #12]
 873 0492 0F2B     		cmp	r3, #15
 874 0494 F9D9     		bls	.L59
 691:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 692:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Take the peripheral out of the reset state.
 693:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(g_pui32SRRegs[SYS_CTRL_PERIPH_INDEX(ui32Peripheral)]) &=
 875              		.loc 1 693 0 is_stmt 1
 876 0496 7B68     		ldr	r3, [r7, #4]
 877 0498 1B0A     		lsrs	r3, r3, #8
 878 049a 03F00F02 		and	r2, r3, #15
 879 049e 40F20003 		movw	r3, #:lower16:g_pui32SRRegs
 880 04a2 C0F20003 		movt	r3, #:upper16:g_pui32SRRegs
 881 04a6 53F82230 		ldr	r3, [r3, r2, lsl #2]
 882 04aa 1A46     		mov	r2, r3
 883 04ac 7B68     		ldr	r3, [r7, #4]
 884 04ae 1B0A     		lsrs	r3, r3, #8
 885 04b0 03F00F01 		and	r1, r3, #15
 886 04b4 40F20003 		movw	r3, #:lower16:g_pui32SRRegs
 887 04b8 C0F20003 		movt	r3, #:upper16:g_pui32SRRegs
 888 04bc 53F82130 		ldr	r3, [r3, r1, lsl #2]
 889 04c0 1968     		ldr	r1, [r3]
 694:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ~SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 890              		.loc 1 694 0
 891 04c2 7B68     		ldr	r3, [r7, #4]
 892 04c4 03F00F03 		and	r3, r3, #15
 893 04c8 0120     		movs	r0, #1
 894 04ca 00FA03F3 		lsl	r3, r0, r3
 895 04ce DB43     		mvns	r3, r3
 693:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ~SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 896              		.loc 1 693 0
 897 04d0 0B40     		ands	r3, r3, r1
 898 04d2 1360     		str	r3, [r2]
 695:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 899              		.loc 1 695 0
 900 04d4 1437     		adds	r7, r7, #20
 901 04d6 BD46     		mov	sp, r7
 902              		@ sp needed
 903 04d8 5DF8047B 		ldr	r7, [sp], #4
 904 04dc 7047     		bx	lr
 905              		.cfi_endproc
 906              	.LFE9:
 908 04de 00BF     		.align	2
 909              		.global	SysCtrlPeripheralEnable
 910              		.thumb
 911              		.thumb_func
 913              	SysCtrlPeripheralEnable:
 914              	.LFB10:
 696:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 697:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 698:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 699:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 700:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Enables a peripheral (in Run mode)
 701:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 702:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32Peripheral is the peripheral to enable.
 703:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 704:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Peripherals are enabled with this function.  At power-up, some peripherals
 705:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! are disabled and must be enabled to operate or respond to
 706:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! register reads/writes.
 707:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 708:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The \e ui32Peripheral parameter must be one of the values:
 709:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT0 , \b SYS_CTRL_PERIPH_GPT1,
 710:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT2,  \b SYS_CTRL_PERIPH_GPT3,
 711:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_SSI0,  \b SYS_CTRL_PERIPH_SSI1,
 712:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_UART0, \b SYS_CTRL_PERIPH_UART1,
 713:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_I2C,   \b SYS_CTRL_PERIPH_PKA,
 714:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_AES,   \b SYS_CTRL_PERIPH_RFC.
 715:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 716:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \note The actual enabling of the peripheral might be delayed until some
 717:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! time after this function returns. Ensure that the peripheral is not
 718:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! accessed until enabled.
 719:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 720:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 721:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 722:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 723:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 724:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlPeripheralEnable(uint32_t ui32Peripheral)
 725:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 915              		.loc 1 725 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 8
 918              		@ frame_needed = 1, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 920 04e0 80B4     		push	{r7}
 921              		.cfi_def_cfa_offset 4
 922              		.cfi_offset 7, -4
 923 04e2 83B0     		sub	sp, sp, #12
 924              		.cfi_def_cfa_offset 16
 925 04e4 00AF     		add	r7, sp, #0
 926              		.cfi_def_cfa_register 7
 927 04e6 7860     		str	r0, [r7, #4]
 726:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Check the arguments.
 727:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(SysCtrlPeripheralValid(ui32Peripheral));
 728:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 729:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Enable module in Run Mode
 730:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(g_pui32RCGCRegs[SYS_CTRL_PERIPH_INDEX(ui32Peripheral)]) |=
 928              		.loc 1 730 0
 929 04e8 7B68     		ldr	r3, [r7, #4]
 930 04ea 1B0A     		lsrs	r3, r3, #8
 931 04ec 03F00F02 		and	r2, r3, #15
 932 04f0 40F20003 		movw	r3, #:lower16:g_pui32RCGCRegs
 933 04f4 C0F20003 		movt	r3, #:upper16:g_pui32RCGCRegs
 934 04f8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 935 04fc 1A46     		mov	r2, r3
 936 04fe 7B68     		ldr	r3, [r7, #4]
 937 0500 1B0A     		lsrs	r3, r3, #8
 938 0502 03F00F01 		and	r1, r3, #15
 939 0506 40F20003 		movw	r3, #:lower16:g_pui32RCGCRegs
 940 050a C0F20003 		movt	r3, #:upper16:g_pui32RCGCRegs
 941 050e 53F82130 		ldr	r3, [r3, r1, lsl #2]
 942 0512 1968     		ldr	r1, [r3]
 731:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 943              		.loc 1 731 0
 944 0514 7B68     		ldr	r3, [r7, #4]
 945 0516 03F00F03 		and	r3, r3, #15
 946 051a 0120     		movs	r0, #1
 947 051c 00FA03F3 		lsl	r3, r0, r3
 730:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 948              		.loc 1 730 0
 949 0520 0B43     		orrs	r3, r3, r1
 950 0522 1360     		str	r3, [r2]
 732:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 951              		.loc 1 732 0
 952 0524 0C37     		adds	r7, r7, #12
 953 0526 BD46     		mov	sp, r7
 954              		@ sp needed
 955 0528 5DF8047B 		ldr	r7, [sp], #4
 956 052c 7047     		bx	lr
 957              		.cfi_endproc
 958              	.LFE10:
 960 052e 00BF     		.align	2
 961              		.global	SysCtrlPeripheralDisable
 962              		.thumb
 963              		.thumb_func
 965              	SysCtrlPeripheralDisable:
 966              	.LFB11:
 733:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 734:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 735:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 736:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 737:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Disables a peripheral (in Run mode)
 738:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 739:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32Peripheral is the peripheral to disable.
 740:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 741:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Peripherals are disabled with this function. Once disabled, peripherals do
 742:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! not operate or respond to register reads/writes.
 743:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 744:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The \e ui32Peripheral parameter must be one of the values:
 745:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT0 , \b SYS_CTRL_PERIPH_GPT1,
 746:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT2,  \b SYS_CTRL_PERIPH_GPT3,
 747:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_SSI0,  \b SYS_CTRL_PERIPH_SSI1,
 748:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_UART0, \b SYS_CTRL_PERIPH_UART1,
 749:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_I2C,   \b SYS_CTRL_PERIPH_PKA,
 750:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_AES,   \b SYS_CTRL_PERIPH_RFC.
 751:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 752:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 753:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 754:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 755:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 756:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlPeripheralDisable(uint32_t ui32Peripheral)
 757:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 967              		.loc 1 757 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 8
 970              		@ frame_needed = 1, uses_anonymous_args = 0
 971              		@ link register save eliminated.
 972 0530 80B4     		push	{r7}
 973              		.cfi_def_cfa_offset 4
 974              		.cfi_offset 7, -4
 975 0532 83B0     		sub	sp, sp, #12
 976              		.cfi_def_cfa_offset 16
 977 0534 00AF     		add	r7, sp, #0
 978              		.cfi_def_cfa_register 7
 979 0536 7860     		str	r0, [r7, #4]
 758:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Check the arguments.
 759:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(SysCtrlPeripheralValid(ui32Peripheral));
 760:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 761:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Disable module in Run Mode
 762:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(g_pui32RCGCRegs[SYS_CTRL_PERIPH_INDEX(ui32Peripheral)]) &=
 980              		.loc 1 762 0
 981 0538 7B68     		ldr	r3, [r7, #4]
 982 053a 1B0A     		lsrs	r3, r3, #8
 983 053c 03F00F02 		and	r2, r3, #15
 984 0540 40F20003 		movw	r3, #:lower16:g_pui32RCGCRegs
 985 0544 C0F20003 		movt	r3, #:upper16:g_pui32RCGCRegs
 986 0548 53F82230 		ldr	r3, [r3, r2, lsl #2]
 987 054c 1A46     		mov	r2, r3
 988 054e 7B68     		ldr	r3, [r7, #4]
 989 0550 1B0A     		lsrs	r3, r3, #8
 990 0552 03F00F01 		and	r1, r3, #15
 991 0556 40F20003 		movw	r3, #:lower16:g_pui32RCGCRegs
 992 055a C0F20003 		movt	r3, #:upper16:g_pui32RCGCRegs
 993 055e 53F82130 		ldr	r3, [r3, r1, lsl #2]
 994 0562 1968     		ldr	r1, [r3]
 763:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ~SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 995              		.loc 1 763 0
 996 0564 7B68     		ldr	r3, [r7, #4]
 997 0566 03F00F03 		and	r3, r3, #15
 998 056a 0120     		movs	r0, #1
 999 056c 00FA03F3 		lsl	r3, r0, r3
 1000 0570 DB43     		mvns	r3, r3
 762:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ~SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 1001              		.loc 1 762 0
 1002 0572 0B40     		ands	r3, r3, r1
 1003 0574 1360     		str	r3, [r2]
 764:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 1004              		.loc 1 764 0
 1005 0576 0C37     		adds	r7, r7, #12
 1006 0578 BD46     		mov	sp, r7
 1007              		@ sp needed
 1008 057a 5DF8047B 		ldr	r7, [sp], #4
 1009 057e 7047     		bx	lr
 1010              		.cfi_endproc
 1011              	.LFE11:
 1013              		.align	2
 1014              		.global	SysCtrlPeripheralSleepEnable
 1015              		.thumb
 1016              		.thumb_func
 1018              	SysCtrlPeripheralSleepEnable:
 1019              	.LFB12:
 765:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 766:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 767:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 768:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 769:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Enables a peripheral in sleep mode
 770:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 771:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32Peripheral is the peripheral to enable in sleep mode.
 772:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 773:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function allows a peripheral to continue operating when the processor
 774:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! goes into sleep mode.  Because the clocking configuration of the device does
 775:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! not change, any peripheral can safely continue operating while the
 776:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! processor is in sleep mode, and can therefore wake the processor from sleep
 777:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! mode.
 778:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 779:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The \e ui32Peripheral parameter must be one of the values:
 780:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT0 , \b SYS_CTRL_PERIPH_GPT1,
 781:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT2,  \b SYS_CTRL_PERIPH_GPT3,
 782:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_SSI0,  \b SYS_CTRL_PERIPH_SSI1,
 783:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_UART0, \b SYS_CTRL_PERIPH_UART1,
 784:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_I2C,   \b SYS_CTRL_PERIPH_PKA,
 785:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_AES,   \b SYS_CTRL_PERIPH_RFC.
 786:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 787:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 788:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 789:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 790:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 791:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlPeripheralSleepEnable(uint32_t ui32Peripheral)
 792:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 1020              		.loc 1 792 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 8
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024              		@ link register save eliminated.
 1025 0580 80B4     		push	{r7}
 1026              		.cfi_def_cfa_offset 4
 1027              		.cfi_offset 7, -4
 1028 0582 83B0     		sub	sp, sp, #12
 1029              		.cfi_def_cfa_offset 16
 1030 0584 00AF     		add	r7, sp, #0
 1031              		.cfi_def_cfa_register 7
 1032 0586 7860     		str	r0, [r7, #4]
 793:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Check the arguments.
 794:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(SysCtrlPeripheralValid(ui32Peripheral));
 795:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 796:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Enable this peripheral in sleep mode.
 797:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(g_pui32SCGCRegs[SYS_CTRL_PERIPH_INDEX(ui32Peripheral)]) |=
 1033              		.loc 1 797 0
 1034 0588 7B68     		ldr	r3, [r7, #4]
 1035 058a 1B0A     		lsrs	r3, r3, #8
 1036 058c 03F00F02 		and	r2, r3, #15
 1037 0590 40F20003 		movw	r3, #:lower16:g_pui32SCGCRegs
 1038 0594 C0F20003 		movt	r3, #:upper16:g_pui32SCGCRegs
 1039 0598 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1040 059c 1A46     		mov	r2, r3
 1041 059e 7B68     		ldr	r3, [r7, #4]
 1042 05a0 1B0A     		lsrs	r3, r3, #8
 1043 05a2 03F00F01 		and	r1, r3, #15
 1044 05a6 40F20003 		movw	r3, #:lower16:g_pui32SCGCRegs
 1045 05aa C0F20003 		movt	r3, #:upper16:g_pui32SCGCRegs
 1046 05ae 53F82130 		ldr	r3, [r3, r1, lsl #2]
 1047 05b2 1968     		ldr	r1, [r3]
 798:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 1048              		.loc 1 798 0
 1049 05b4 7B68     		ldr	r3, [r7, #4]
 1050 05b6 03F00F03 		and	r3, r3, #15
 1051 05ba 0120     		movs	r0, #1
 1052 05bc 00FA03F3 		lsl	r3, r0, r3
 797:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 1053              		.loc 1 797 0
 1054 05c0 0B43     		orrs	r3, r3, r1
 1055 05c2 1360     		str	r3, [r2]
 799:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 1056              		.loc 1 799 0
 1057 05c4 0C37     		adds	r7, r7, #12
 1058 05c6 BD46     		mov	sp, r7
 1059              		@ sp needed
 1060 05c8 5DF8047B 		ldr	r7, [sp], #4
 1061 05cc 7047     		bx	lr
 1062              		.cfi_endproc
 1063              	.LFE12:
 1065 05ce 00BF     		.align	2
 1066              		.global	SysCtrlPeripheralSleepDisable
 1067              		.thumb
 1068              		.thumb_func
 1070              	SysCtrlPeripheralSleepDisable:
 1071              	.LFB13:
 800:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 801:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 802:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 803:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 804:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Disables a peripheral in sleep mode
 805:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 806:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32Peripheral is the peripheral to disable in sleep mode.
 807:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 808:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function causes a peripheral to stop operating when the processor goes
 809:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! into sleep mode.  Disabling peripherals while in sleep mode helps lower
 810:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! the current draw of the device. If enabled (by SysCtrlPeripheralEnable()),
 811:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! the peripheral automatically resume operation when the processor
 812:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! leaves sleep mode, maintaining the entire state before entry into sleep
 813:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! mode.
 814:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 815:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The \e ui32Peripheral parameter must be one of the values:
 816:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT0 , \b SYS_CTRL_PERIPH_GPT1,
 817:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT2,  \b SYS_CTRL_PERIPH_GPT3,
 818:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_SSI0,  \b SYS_CTRL_PERIPH_SSI1,
 819:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_UART0, \b SYS_CTRL_PERIPH_UART1,
 820:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_I2C,   \b SYS_CTRL_PERIPH_PKA,
 821:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_AES,   \b SYS_CTRL_PERIPH_RFC.
 822:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 823:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 824:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 825:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 826:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 827:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlPeripheralSleepDisable(uint32_t ui32Peripheral)
 828:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 1072              		.loc 1 828 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 8
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 1077 05d0 80B4     		push	{r7}
 1078              		.cfi_def_cfa_offset 4
 1079              		.cfi_offset 7, -4
 1080 05d2 83B0     		sub	sp, sp, #12
 1081              		.cfi_def_cfa_offset 16
 1082 05d4 00AF     		add	r7, sp, #0
 1083              		.cfi_def_cfa_register 7
 1084 05d6 7860     		str	r0, [r7, #4]
 829:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Check the arguments.
 830:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(SysCtrlPeripheralValid(ui32Peripheral));
 831:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 832:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Disable this peripheral in sleep mode.
 833:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(g_pui32SCGCRegs[SYS_CTRL_PERIPH_INDEX(ui32Peripheral)]) &=
 1085              		.loc 1 833 0
 1086 05d8 7B68     		ldr	r3, [r7, #4]
 1087 05da 1B0A     		lsrs	r3, r3, #8
 1088 05dc 03F00F02 		and	r2, r3, #15
 1089 05e0 40F20003 		movw	r3, #:lower16:g_pui32SCGCRegs
 1090 05e4 C0F20003 		movt	r3, #:upper16:g_pui32SCGCRegs
 1091 05e8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1092 05ec 1A46     		mov	r2, r3
 1093 05ee 7B68     		ldr	r3, [r7, #4]
 1094 05f0 1B0A     		lsrs	r3, r3, #8
 1095 05f2 03F00F01 		and	r1, r3, #15
 1096 05f6 40F20003 		movw	r3, #:lower16:g_pui32SCGCRegs
 1097 05fa C0F20003 		movt	r3, #:upper16:g_pui32SCGCRegs
 1098 05fe 53F82130 		ldr	r3, [r3, r1, lsl #2]
 1099 0602 1968     		ldr	r1, [r3]
 834:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ~SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 1100              		.loc 1 834 0
 1101 0604 7B68     		ldr	r3, [r7, #4]
 1102 0606 03F00F03 		and	r3, r3, #15
 1103 060a 0120     		movs	r0, #1
 1104 060c 00FA03F3 		lsl	r3, r0, r3
 1105 0610 DB43     		mvns	r3, r3
 833:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ~SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 1106              		.loc 1 833 0
 1107 0612 0B40     		ands	r3, r3, r1
 1108 0614 1360     		str	r3, [r2]
 835:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 1109              		.loc 1 835 0
 1110 0616 0C37     		adds	r7, r7, #12
 1111 0618 BD46     		mov	sp, r7
 1112              		@ sp needed
 1113 061a 5DF8047B 		ldr	r7, [sp], #4
 1114 061e 7047     		bx	lr
 1115              		.cfi_endproc
 1116              	.LFE13:
 1118              		.align	2
 1119              		.global	SysCtrlPeripheralDeepSleepEnable
 1120              		.thumb
 1121              		.thumb_func
 1123              	SysCtrlPeripheralDeepSleepEnable:
 1124              	.LFB14:
 836:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 837:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 838:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 839:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 840:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Enables a peripheral in deep-sleep mode
 841:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 842:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32Peripheral is the peripheral to enable in deep-sleep mode.
 843:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 844:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function allows a peripheral to continue operating when the processor
 845:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! goes into deep-sleep mode. Because the clocking configuration of the device
 846:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! can change, not all peripherals can safely continue operating while the
 847:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! processor is in sleep mode. Safe operation depends on the chosen power mode.
 848:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The caller must make sensible choices.
 849:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 850:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The \e ui32Peripheral parameter must be one of the values:
 851:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT0 , \b SYS_CTRL_PERIPH_GPT1,
 852:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT2,  \b SYS_CTRL_PERIPH_GPT3,
 853:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_SSI0,  \b SYS_CTRL_PERIPH_SSI1,
 854:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_UART0, \b SYS_CTRL_PERIPH_UART1,
 855:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_I2C,   \b SYS_CTRL_PERIPH_PKA,
 856:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_AES,   \b SYS_CTRL_PERIPH_RFC.
 857:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 858:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 859:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 860:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 861:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 862:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlPeripheralDeepSleepEnable(uint32_t ui32Peripheral)
 863:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 1125              		.loc 1 863 0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 8
 1128              		@ frame_needed = 1, uses_anonymous_args = 0
 1129              		@ link register save eliminated.
 1130 0620 80B4     		push	{r7}
 1131              		.cfi_def_cfa_offset 4
 1132              		.cfi_offset 7, -4
 1133 0622 83B0     		sub	sp, sp, #12
 1134              		.cfi_def_cfa_offset 16
 1135 0624 00AF     		add	r7, sp, #0
 1136              		.cfi_def_cfa_register 7
 1137 0626 7860     		str	r0, [r7, #4]
 864:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Check the arguments.
 865:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(SysCtrlPeripheralValid(ui32Peripheral));
 866:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 867:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Enable this peripheral in deep-sleep mode.
 868:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(g_pui32DCGCRegs[SYS_CTRL_PERIPH_INDEX(ui32Peripheral)]) |=
 1138              		.loc 1 868 0
 1139 0628 7B68     		ldr	r3, [r7, #4]
 1140 062a 1B0A     		lsrs	r3, r3, #8
 1141 062c 03F00F02 		and	r2, r3, #15
 1142 0630 40F20003 		movw	r3, #:lower16:g_pui32DCGCRegs
 1143 0634 C0F20003 		movt	r3, #:upper16:g_pui32DCGCRegs
 1144 0638 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1145 063c 1A46     		mov	r2, r3
 1146 063e 7B68     		ldr	r3, [r7, #4]
 1147 0640 1B0A     		lsrs	r3, r3, #8
 1148 0642 03F00F01 		and	r1, r3, #15
 1149 0646 40F20003 		movw	r3, #:lower16:g_pui32DCGCRegs
 1150 064a C0F20003 		movt	r3, #:upper16:g_pui32DCGCRegs
 1151 064e 53F82130 		ldr	r3, [r3, r1, lsl #2]
 1152 0652 1968     		ldr	r1, [r3]
 869:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 1153              		.loc 1 869 0
 1154 0654 7B68     		ldr	r3, [r7, #4]
 1155 0656 03F00F03 		and	r3, r3, #15
 1156 065a 0120     		movs	r0, #1
 1157 065c 00FA03F3 		lsl	r3, r0, r3
 868:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 1158              		.loc 1 868 0
 1159 0660 0B43     		orrs	r3, r3, r1
 1160 0662 1360     		str	r3, [r2]
 870:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 1161              		.loc 1 870 0
 1162 0664 0C37     		adds	r7, r7, #12
 1163 0666 BD46     		mov	sp, r7
 1164              		@ sp needed
 1165 0668 5DF8047B 		ldr	r7, [sp], #4
 1166 066c 7047     		bx	lr
 1167              		.cfi_endproc
 1168              	.LFE14:
 1170 066e 00BF     		.align	2
 1171              		.global	SysCtrlPeripheralDeepSleepDisable
 1172              		.thumb
 1173              		.thumb_func
 1175              	SysCtrlPeripheralDeepSleepDisable:
 1176              	.LFB15:
 871:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 872:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 873:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 874:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 875:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Disables a peripheral in deep-sleep mode
 876:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 877:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32Peripheral is the peripheral to disable in deep-sleep mode.
 878:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 879:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function causes a peripheral to stop operating when the processor goes
 880:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! into deep-sleep mode.  Disabling peripherals while in deep-sleep mode helps
 881:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! to lower the current draw of the device, and can keep peripherals that
 882:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! require a particular clock frequency from operating when the clock changes
 883:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! as a result of entering deep-sleep mode.  If enabled (by
 884:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! SysCtrlPeripheralEnable()), the peripheral automatically resumes operation
 885:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! when the processor leaves deep-sleep mode, maintaining its entire
 886:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! state from before entry into deep-sleep mode.
 887:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 888:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The \e ui32Peripheral parameter must be one of the values:
 889:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT0 , \b SYS_CTRL_PERIPH_GPT1,
 890:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_GPT2,  \b SYS_CTRL_PERIPH_GPT3,
 891:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_SSI0,  \b SYS_CTRL_PERIPH_SSI1,
 892:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_UART0, \b SYS_CTRL_PERIPH_UART1,
 893:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_I2C,   \b SYS_CTRL_PERIPH_PKA,
 894:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PERIPH_AES,   \b SYS_CTRL_PERIPH_RFC.
 895:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 896:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 897:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 898:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 899:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 900:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlPeripheralDeepSleepDisable(uint32_t ui32Peripheral)
 901:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 1177              		.loc 1 901 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 8
 1180              		@ frame_needed = 1, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 1182 0670 80B4     		push	{r7}
 1183              		.cfi_def_cfa_offset 4
 1184              		.cfi_offset 7, -4
 1185 0672 83B0     		sub	sp, sp, #12
 1186              		.cfi_def_cfa_offset 16
 1187 0674 00AF     		add	r7, sp, #0
 1188              		.cfi_def_cfa_register 7
 1189 0676 7860     		str	r0, [r7, #4]
 902:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Check the arguments.
 903:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(SysCtrlPeripheralValid(ui32Peripheral));
 904:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 905:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Disable this peripheral in deep-sleep mode.
 906:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(g_pui32DCGCRegs[SYS_CTRL_PERIPH_INDEX(ui32Peripheral)]) &=
 1190              		.loc 1 906 0
 1191 0678 7B68     		ldr	r3, [r7, #4]
 1192 067a 1B0A     		lsrs	r3, r3, #8
 1193 067c 03F00F02 		and	r2, r3, #15
 1194 0680 40F20003 		movw	r3, #:lower16:g_pui32DCGCRegs
 1195 0684 C0F20003 		movt	r3, #:upper16:g_pui32DCGCRegs
 1196 0688 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1197 068c 1A46     		mov	r2, r3
 1198 068e 7B68     		ldr	r3, [r7, #4]
 1199 0690 1B0A     		lsrs	r3, r3, #8
 1200 0692 03F00F01 		and	r1, r3, #15
 1201 0696 40F20003 		movw	r3, #:lower16:g_pui32DCGCRegs
 1202 069a C0F20003 		movt	r3, #:upper16:g_pui32DCGCRegs
 1203 069e 53F82130 		ldr	r3, [r3, r1, lsl #2]
 1204 06a2 1968     		ldr	r1, [r3]
 907:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ~SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 1205              		.loc 1 907 0
 1206 06a4 7B68     		ldr	r3, [r7, #4]
 1207 06a6 03F00F03 		and	r3, r3, #15
 1208 06aa 0120     		movs	r0, #1
 1209 06ac 00FA03F3 		lsl	r3, r0, r3
 1210 06b0 DB43     		mvns	r3, r3
 906:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****         ~SYS_CTRL_PERIPH_MASKBIT(ui32Peripheral);
 1211              		.loc 1 906 0
 1212 06b2 0B40     		ands	r3, r3, r1
 1213 06b4 1360     		str	r3, [r2]
 908:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 1214              		.loc 1 908 0
 1215 06b6 0C37     		adds	r7, r7, #12
 1216 06b8 BD46     		mov	sp, r7
 1217              		@ sp needed
 1218 06ba 5DF8047B 		ldr	r7, [sp], #4
 1219 06be 7047     		bx	lr
 1220              		.cfi_endproc
 1221              	.LFE15:
 1223              		.align	2
 1224              		.global	SysCtrlPowerModeSet
 1225              		.thumb
 1226              		.thumb_func
 1228              	SysCtrlPowerModeSet:
 1229              	.LFB16:
 909:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 910:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 911:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 912:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 913:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Set Power Mode
 914:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 915:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \param ui32PowerMode is the power mode to be entered.
 916:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 917:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function selects the power mode to enter when CM3 enters Deep Sleep
 918:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! mode.
 919:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Power mode PM0 (\b SYS_CTRL_PM_NOACTION) is entered when the CPU
 920:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! wakes up due to an interrupt.
 921:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Note only transitions to and from PM0 are legal  (that is, PM1 to PM2
 922:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! cannot happen).
 923:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 924:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! The \e ui32PowerMode argument must be only one of the following values:
 925:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PM_NOACTION, \b SYS_CTRL_PM_1, \b SYS_CTRL_PM_2 or
 926:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PM_3.
 927:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 928:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \sa SysCtrlDeepSleep().
 929:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 930:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 931:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 932:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 933:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 934:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlPowerModeSet(uint32_t ui32PowerMode)
 935:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 1230              		.loc 1 935 0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 8
 1233              		@ frame_needed = 1, uses_anonymous_args = 0
 1234              		@ link register save eliminated.
 1235 06c0 80B4     		push	{r7}
 1236              		.cfi_def_cfa_offset 4
 1237              		.cfi_offset 7, -4
 1238 06c2 83B0     		sub	sp, sp, #12
 1239              		.cfi_def_cfa_offset 16
 1240 06c4 00AF     		add	r7, sp, #0
 1241              		.cfi_def_cfa_register 7
 1242 06c6 7860     		str	r0, [r7, #4]
 936:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Check the arguments.
 937:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ASSERT(ui32PowerMode == SYS_CTRL_PM_NOACTION ||
 938:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            ui32PowerMode == SYS_CTRL_PM_1        ||
 939:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            ui32PowerMode == SYS_CTRL_PM_2        ||
 940:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****            ui32PowerMode == SYS_CTRL_PM_3);
 941:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 942:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     // Set power mode
 943:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(SYS_CTRL_PMCTL) = ui32PowerMode;
 1243              		.loc 1 943 0
 1244 06c8 42F25803 		movw	r3, #8280
 1245 06cc C4F20D03 		movt	r3, 16397
 1246 06d0 7A68     		ldr	r2, [r7, #4]
 1247 06d2 1A60     		str	r2, [r3]
 944:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 1248              		.loc 1 944 0
 1249 06d4 0C37     		adds	r7, r7, #12
 1250 06d6 BD46     		mov	sp, r7
 1251              		@ sp needed
 1252 06d8 5DF8047B 		ldr	r7, [sp], #4
 1253 06dc 7047     		bx	lr
 1254              		.cfi_endproc
 1255              	.LFE16:
 1257 06de 00BF     		.align	2
 1258              		.global	SysCtrlPowerModeGet
 1259              		.thumb
 1260              		.thumb_func
 1262              	SysCtrlPowerModeGet:
 1263              	.LFB17:
 945:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 946:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 947:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 948:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 949:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Get Power Mode
 950:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 951:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function returns the current Power Mode setting.
 952:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 953:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return Power mode, i.e. one of the following values:
 954:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PM_NOACTION, \b SYS_CTRL_PM_1, \b SYS_CTRL_PM_2 or
 955:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \b SYS_CTRL_PM_3.
 956:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 957:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 958:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** uint32_t
 959:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlPowerModeGet(void)
 960:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 1264              		.loc 1 960 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 8
 1267              		@ frame_needed = 1, uses_anonymous_args = 0
 1268              		@ link register save eliminated.
 1269 06e0 80B4     		push	{r7}
 1270              		.cfi_def_cfa_offset 4
 1271              		.cfi_offset 7, -4
 1272 06e2 83B0     		sub	sp, sp, #12
 1273              		.cfi_def_cfa_offset 16
 1274 06e4 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
 961:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32PowerMode;
 962:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 963:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32PowerMode = HWREG(SYS_CTRL_PMCTL);
 1276              		.loc 1 963 0
 1277 06e6 42F25803 		movw	r3, #8280
 1278 06ea C4F20D03 		movt	r3, 16397
 1279 06ee 1B68     		ldr	r3, [r3]
 1280 06f0 7B60     		str	r3, [r7, #4]
 964:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32PowerMode &= SYS_CTRL_PMCTL_PM_M;
 1281              		.loc 1 964 0
 1282 06f2 7B68     		ldr	r3, [r7, #4]
 1283 06f4 03F00303 		and	r3, r3, #3
 1284 06f8 7B60     		str	r3, [r7, #4]
 965:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 966:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     return(ui32PowerMode);
 1285              		.loc 1 966 0
 1286 06fa 7B68     		ldr	r3, [r7, #4]
 967:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 1287              		.loc 1 967 0
 1288 06fc 1846     		mov	r0, r3
 1289 06fe 0C37     		adds	r7, r7, #12
 1290 0700 BD46     		mov	sp, r7
 1291              		@ sp needed
 1292 0702 5DF8047B 		ldr	r7, [sp], #4
 1293 0706 7047     		bx	lr
 1294              		.cfi_endproc
 1295              	.LFE17:
 1297              		.align	2
 1298              		.global	SysCtrlClockLossDetectEnable
 1299              		.thumb
 1300              		.thumb_func
 1302              	SysCtrlClockLossDetectEnable:
 1303              	.LFB18:
 968:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 969:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 970:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 971:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 972:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 973:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! Enable Clock Loss Detection
 974:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 975:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! This function enables clock loss detection.
 976:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //!
 977:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //! \return None
 978:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //
 979:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** //*****************************************************************************
 980:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** void
 981:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** SysCtrlClockLossDetectEnable(void)
 982:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** {
 1304              		.loc 1 982 0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 8
 1307              		@ frame_needed = 1, uses_anonymous_args = 0
 1308              		@ link register save eliminated.
 1309 0708 80B4     		push	{r7}
 1310              		.cfi_def_cfa_offset 4
 1311              		.cfi_offset 7, -4
 1312 070a 83B0     		sub	sp, sp, #12
 1313              		.cfi_def_cfa_offset 16
 1314 070c 00AF     		add	r7, sp, #0
 1315              		.cfi_def_cfa_register 7
 983:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     uint32_t ui32CLD;
 984:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** 
 985:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32CLD = HWREG(SYS_CTRL_CLD);
 1316              		.loc 1 985 0
 1317 070e 4FF40253 		mov	r3, #8320
 1318 0712 C4F20D03 		movt	r3, 16397
 1319 0716 1B68     		ldr	r3, [r3]
 1320 0718 7B60     		str	r3, [r7, #4]
 986:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     ui32CLD |= SYS_CTRL_CLD_EN;
 1321              		.loc 1 986 0
 1322 071a 7B68     		ldr	r3, [r7, #4]
 1323 071c 43F00103 		orr	r3, r3, #1
 1324 0720 7B60     		str	r3, [r7, #4]
 987:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c ****     HWREG(SYS_CTRL_CLD) = ui32CLD;
 1325              		.loc 1 987 0
 1326 0722 4FF40253 		mov	r3, #8320
 1327 0726 C4F20D03 		movt	r3, 16397
 1328 072a 7A68     		ldr	r2, [r7, #4]
 1329 072c 1A60     		str	r2, [r3]
 988:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sys_ctrl.c **** }
 1330              		.loc 1 988 0
 1331 072e 0C37     		adds	r7, r7, #12
 1332 0730 BD46     		mov	sp, r7
 1333              		@ sp needed
 1334 0732 5DF8047B 		ldr	r7, [sp], #4
 1335 0736 7047     		bx	lr
 1336              		.cfi_endproc
 1337              	.LFE18:
 1339              	.Letext0:
 1340              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1341              		.file 3 "/usr/include/newlib/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 sys_ctrl.c
     /tmp/ccIsnO6k.s:19     .rodata:0000000000000000 $d
     /tmp/ccIsnO6k.s:22     .rodata:0000000000000000 g_pui32RCGCRegs
     /tmp/ccIsnO6k.s:32     .rodata:0000000000000018 g_pui32SCGCRegs
     /tmp/ccIsnO6k.s:42     .rodata:0000000000000030 g_pui32DCGCRegs
     /tmp/ccIsnO6k.s:52     .rodata:0000000000000048 g_pui32SRRegs
     /tmp/ccIsnO6k.s:61     .rodata:000000000000005c g_pui32DieCfgMask
     /tmp/ccIsnO6k.s:69     .text:0000000000000000 $t
     /tmp/ccIsnO6k.s:74     .text:0000000000000000 SysCtrlClockSet
     /tmp/ccIsnO6k.s:494    .text:000000000000028c SysCtrlDelay
     /tmp/ccIsnO6k.s:211    .text:00000000000000d8 SysCtrlClockGet
     /tmp/ccIsnO6k.s:245    .text:0000000000000104 $d
     /tmp/ccIsnO6k.s:255    .text:0000000000000124 $t
     /tmp/ccIsnO6k.s:327    .text:0000000000000194 SysCtrlIOClockSet
     /tmp/ccIsnO6k.s:376    .text:00000000000001d0 SysCtrlIOClockGet
     /tmp/ccIsnO6k.s:412    .text:00000000000001fc $d
     /tmp/ccIsnO6k.s:422    .text:000000000000021c $t
     /tmp/ccIsnO6k.s:517    .text:0000000000000294 SysCtrlReset
     /tmp/ccIsnO6k.s:545    .text:00000000000002a8 SysCtrlSleep
     /tmp/ccIsnO6k.s:569    .text:00000000000002b4 SysCtrlDeepSleep
     /tmp/ccIsnO6k.s:735    .text:00000000000003bc SysCtrlPeripheralPresent
     /tmp/ccIsnO6k.s:823    .text:0000000000000440 SysCtrlPeripheralReset
     /tmp/ccIsnO6k.s:913    .text:00000000000004e0 SysCtrlPeripheralEnable
     /tmp/ccIsnO6k.s:965    .text:0000000000000530 SysCtrlPeripheralDisable
     /tmp/ccIsnO6k.s:1018   .text:0000000000000580 SysCtrlPeripheralSleepEnable
     /tmp/ccIsnO6k.s:1070   .text:00000000000005d0 SysCtrlPeripheralSleepDisable
     /tmp/ccIsnO6k.s:1123   .text:0000000000000620 SysCtrlPeripheralDeepSleepEnable
     /tmp/ccIsnO6k.s:1175   .text:0000000000000670 SysCtrlPeripheralDeepSleepDisable
     /tmp/ccIsnO6k.s:1228   .text:00000000000006c0 SysCtrlPowerModeSet
     /tmp/ccIsnO6k.s:1262   .text:00000000000006e0 SysCtrlPowerModeGet
     /tmp/ccIsnO6k.s:1302   .text:0000000000000708 SysCtrlClockLossDetectEnable
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.08074afb2ccc9da754fae8e3ee0f577b
                           .group:0000000000000000 wm4.hw_flash_ctrl.h.39.9e1b51558015e13f8d9f8700e513c4a2
                           .group:0000000000000000 wm4.hw_ints.h.42.85b9479f2be35b086f1bb7cbb15bc097
                           .group:0000000000000000 wm4.hw_nvic.h.42.f3b9efa2537e728866c85de74b3e5811
                           .group:0000000000000000 wm4.hw_sys_ctrl.h.39.50b4d7775c38e82076d0eb3bdc2daf82
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.debug.h.41.b891e613993738d067c45a5ff528d11a
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.sys_ctrl.h.41.c6bbd4dace326d685c1afa45bc1ba1e2

UNDEFINED SYMBOLS
CPUwfi

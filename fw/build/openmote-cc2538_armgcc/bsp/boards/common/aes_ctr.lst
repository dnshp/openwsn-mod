   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"aes_ctr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	rreg_uriquery:
  23 0000 683D7563 		.ascii	"h=ucb\000"
  23      6200
  24 0006 0000     		.align	2
  27              	infoBoardname:
  28 0008 43433235 		.ascii	"CC2538\000"
  28      333800
  29 000f 00       		.align	2
  32              	infouCName:
  33 0010 43433235 		.ascii	"CC2538\000"
  33      333800
  34 0017 00       		.align	2
  37              	infoRadioName:
  38 0018 43433235 		.ascii	"CC2538 SoC\000"
  38      33382053 
  38      6F4300
  39 0023 00       		.align	2
  42              	infoStackName:
  43 0024 4F70656E 		.ascii	"OpenWSN \000"
  43      57534E20 
  43      00
  44 002d 000000   		.text
  45              		.align	2
  46              		.thumb
  47              		.thumb_func
  49              	inc_counter:
  50              	.LFB0:
  51              		.file 1 "build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c"
   1:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** /**
   2:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** \brief AES CTR implementation
   3:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****   
   4:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** \author Marcelo Barros de Almeida <marcelobarrosalmeida@gmail.com>, March 2015.
   5:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** */
   6:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** #include <string.h>
   7:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** #include <stdint.h>
   8:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** #include "opendefs.h"
   9:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** #include "aes_ctr.h"
  10:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** #include "crypto_engine.h"
  11:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** 
  12:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** static void inc_counter(uint8_t* counter) {
  52              		.loc 1 12 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 16
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57 0000 80B4     		push	{r7}
  58              		.cfi_def_cfa_offset 4
  59              		.cfi_offset 7, -4
  60 0002 85B0     		sub	sp, sp, #20
  61              		.cfi_def_cfa_offset 24
  62 0004 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  64 0006 7860     		str	r0, [r7, #4]
  13:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    // from openssl
  14:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint32_t n = 16;
  65              		.loc 1 14 0
  66 0008 1023     		movs	r3, #16
  67 000a FB60     		str	r3, [r7, #12]
  68              	.L4:
  15:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t  c;
  16:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    do {
  17:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       --n;
  69              		.loc 1 17 0
  70 000c FB68     		ldr	r3, [r7, #12]
  71 000e 013B     		subs	r3, r3, #1
  72 0010 FB60     		str	r3, [r7, #12]
  18:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       c = counter[n];
  73              		.loc 1 18 0
  74 0012 7A68     		ldr	r2, [r7, #4]
  75 0014 FB68     		ldr	r3, [r7, #12]
  76 0016 1344     		add	r3, r3, r2
  77 0018 1B78     		ldrb	r3, [r3]
  78 001a FB72     		strb	r3, [r7, #11]
  19:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       ++c;
  79              		.loc 1 19 0
  80 001c FB7A     		ldrb	r3, [r7, #11]
  81 001e 0133     		adds	r3, r3, #1
  82 0020 FB72     		strb	r3, [r7, #11]
  20:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       counter[n] = c;
  83              		.loc 1 20 0
  84 0022 7A68     		ldr	r2, [r7, #4]
  85 0024 FB68     		ldr	r3, [r7, #12]
  86 0026 1344     		add	r3, r3, r2
  87 0028 FA7A     		ldrb	r2, [r7, #11]
  88 002a 1A70     		strb	r2, [r3]
  21:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       if (c) return;
  89              		.loc 1 21 0
  90 002c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
  91 002e 002B     		cmp	r3, #0
  92 0030 00D0     		beq	.L2
  93              		.loc 1 21 0 is_stmt 0 discriminator 1
  94 0032 02E0     		b	.L1
  95              	.L2:
  22:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    } while (n);
  96              		.loc 1 22 0 is_stmt 1
  97 0034 FB68     		ldr	r3, [r7, #12]
  98 0036 002B     		cmp	r3, #0
  99 0038 E8D1     		bne	.L4
 100              	.L1:
  23:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** }
 101              		.loc 1 23 0
 102 003a 1437     		adds	r7, r7, #20
 103 003c BD46     		mov	sp, r7
 104              		@ sp needed
 105 003e 5DF8047B 		ldr	r7, [sp], #4
 106 0042 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE0:
 110              		.align	2
 111              		.global	aes_ctr_enc_raw
 112              		.thumb
 113              		.thumb_func
 115              	aes_ctr_enc_raw:
 116              	.LFB1:
  24:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** 
  25:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** /**
  26:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** \brief Raw AES-CTR encryption.
  27:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** \param[in,out] buffer Message to be encrypted. Will be overwritten by ciphertext.
  28:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** \param[in] len Message length. Must be multiple of 16 octets.
  29:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** \param[in] key Buffer containing the secret key (16 octets).
  30:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** \param[in] iv Buffer containing the Initialization Vector (16 octets).
  31:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** 
  32:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** \returns E_SUCCESS when the encryption was successful. 
  33:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** */
  34:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** owerror_t aes_ctr_enc_raw(uint8_t* buffer, uint8_t len, uint8_t key[16], uint8_t iv[16]) {
 117              		.loc 1 34 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 40
 120              		@ frame_needed = 1, uses_anonymous_args = 0
 121 0044 90B5     		push	{r4, r7, lr}
 122              		.cfi_def_cfa_offset 12
 123              		.cfi_offset 4, -12
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0046 8BB0     		sub	sp, sp, #44
 127              		.cfi_def_cfa_offset 56
 128 0048 00AF     		add	r7, sp, #0
 129              		.cfi_def_cfa_register 7
 130 004a F860     		str	r0, [r7, #12]
 131 004c 7A60     		str	r2, [r7, #4]
 132 004e 3B60     		str	r3, [r7]
 133 0050 0B46     		mov	r3, r1
 134 0052 FB72     		strb	r3, [r7, #11]
  35:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t n;
  36:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t k;
  37:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t nb;
  38:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t* pbuf;
  39:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t eiv[16];
  40:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** 
  41:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    nb = len >> 4;
 135              		.loc 1 41 0
 136 0054 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 137 0056 1B09     		lsrs	r3, r3, #4
 138 0058 87F82530 		strb	r3, [r7, #37]
  42:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    for (n = 0; n < nb; n++) {
 139              		.loc 1 42 0
 140 005c 0023     		movs	r3, #0
 141 005e 87F82730 		strb	r3, [r7, #39]
 142 0062 3FE0     		b	.L6
 143              	.L9:
  43:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       pbuf = &buffer[16 * n];
 144              		.loc 1 43 0
 145 0064 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 146 0068 1B01     		lsls	r3, r3, #4
 147 006a FA68     		ldr	r2, [r7, #12]
 148 006c 1344     		add	r3, r3, r2
 149 006e 3B62     		str	r3, [r7, #32]
  44:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       memcpy(eiv, iv, 16);
 150              		.loc 1 44 0
 151 0070 3B68     		ldr	r3, [r7]
 152 0072 07F11004 		add	r4, r7, #16
 153 0076 1868     		ldr	r0, [r3]	@ unaligned
 154 0078 5968     		ldr	r1, [r3, #4]	@ unaligned
 155 007a 9A68     		ldr	r2, [r3, #8]	@ unaligned
 156 007c DB68     		ldr	r3, [r3, #12]	@ unaligned
 157 007e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  45:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       CRYPTO_ENGINE.aes_ecb_enc(eiv, key); 
 158              		.loc 1 45 0
 159 0080 40F20003 		movw	r3, #:lower16:board_crypto_engine
 160 0084 C0F20003 		movt	r3, #:upper16:board_crypto_engine
 161 0088 1B69     		ldr	r3, [r3, #16]
 162 008a 07F11002 		add	r2, r7, #16
 163 008e 1046     		mov	r0, r2
 164 0090 7968     		ldr	r1, [r7, #4]
 165 0092 9847     		blx	r3
  46:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       // may be faster if vector are aligned to 4 bytes (use long instead char in xor)
  47:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       for (k = 0; k < 16; k++) {
 166              		.loc 1 47 0
 167 0094 0023     		movs	r3, #0
 168 0096 87F82630 		strb	r3, [r7, #38]
 169 009a 17E0     		b	.L7
 170              	.L8:
  48:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****          pbuf[k] ^= eiv[k];
 171              		.loc 1 48 0 discriminator 2
 172 009c 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 173 00a0 3A6A     		ldr	r2, [r7, #32]
 174 00a2 1344     		add	r3, r3, r2
 175 00a4 97F82620 		ldrb	r2, [r7, #38]	@ zero_extendqisi2
 176 00a8 396A     		ldr	r1, [r7, #32]
 177 00aa 0A44     		add	r2, r2, r1
 178 00ac 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 179 00ae 97F82620 		ldrb	r2, [r7, #38]	@ zero_extendqisi2
 180 00b2 07F12800 		add	r0, r7, #40
 181 00b6 0244     		add	r2, r2, r0
 182 00b8 12F8182C 		ldrb	r2, [r2, #-24]	@ zero_extendqisi2
 183 00bc 4A40     		eors	r2, r2, r1
 184 00be D2B2     		uxtb	r2, r2
 185 00c0 1A70     		strb	r2, [r3]
  47:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****          pbuf[k] ^= eiv[k];
 186              		.loc 1 47 0 discriminator 2
 187 00c2 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 188 00c6 0133     		adds	r3, r3, #1
 189 00c8 87F82630 		strb	r3, [r7, #38]
 190              	.L7:
  47:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****          pbuf[k] ^= eiv[k];
 191              		.loc 1 47 0 is_stmt 0 discriminator 1
 192 00cc 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 193 00d0 0F2B     		cmp	r3, #15
 194 00d2 E3D9     		bls	.L8
  49:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       }
  50:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       inc_counter(iv);
 195              		.loc 1 50 0 is_stmt 1
 196 00d4 3868     		ldr	r0, [r7]
 197 00d6 FFF793FF 		bl	inc_counter
  42:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       pbuf = &buffer[16 * n];
 198              		.loc 1 42 0
 199 00da 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 200 00de 0133     		adds	r3, r3, #1
 201 00e0 87F82730 		strb	r3, [r7, #39]
 202              	.L6:
  42:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****       pbuf = &buffer[16 * n];
 203              		.loc 1 42 0 is_stmt 0 discriminator 1
 204 00e4 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 205 00e8 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 206 00ec 9A42     		cmp	r2, r3
 207 00ee B9D3     		bcc	.L9
  51:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    }
  52:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** 
  53:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c ****    return E_SUCCESS;
 208              		.loc 1 53 0 is_stmt 1
 209 00f0 0023     		movs	r3, #0
  54:build/openmote-cc2538_armgcc/bsp/boards/common/aes_ctr.c **** }
 210              		.loc 1 54 0
 211 00f2 1846     		mov	r0, r3
 212 00f4 2C37     		adds	r7, r7, #44
 213 00f6 BD46     		mov	sp, r7
 214              		@ sp needed
 215 00f8 90BD     		pop	{r4, r7, pc}
 216              		.cfi_endproc
 217              	.LFE1:
 219              	.Letext0:
 220              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 221              		.file 3 "/usr/include/newlib/stdint.h"
 222              		.file 4 "inc/opendefs.h"
 223              		.file 5 "bsp/boards/crypto_engine.h"
 224              		.file 6 "bsp/boards/openmote-cc2538/board_info.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 aes_ctr.c
     /tmp/ccnjRaVf.s:19     .rodata:0000000000000000 $d
     /tmp/ccnjRaVf.s:22     .rodata:0000000000000000 rreg_uriquery
     /tmp/ccnjRaVf.s:27     .rodata:0000000000000008 infoBoardname
     /tmp/ccnjRaVf.s:32     .rodata:0000000000000010 infouCName
     /tmp/ccnjRaVf.s:37     .rodata:0000000000000018 infoRadioName
     /tmp/ccnjRaVf.s:42     .rodata:0000000000000024 infoStackName
     /tmp/ccnjRaVf.s:45     .text:0000000000000000 $t
     /tmp/ccnjRaVf.s:49     .text:0000000000000000 inc_counter
     /tmp/ccnjRaVf.s:115    .text:0000000000000044 aes_ctr_enc_raw
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.08074afb2ccc9da754fae8e3ee0f577b
                           .group:0000000000000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:0000000000000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:0000000000000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:0000000000000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:0000000000000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:0000000000000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:0000000000000000 wm4.cdefs.h.47.339223046f475c9f2d5db3a9118d7c65
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:0000000000000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:0000000000000000 wm4.stdint.h.10.d0f8e374834fcfc2e296d5d5fe82f02a
                           .group:0000000000000000 wm4.toolchain_defs.h.2.e5fd326231d01413e5361944b26cde07
                           .group:0000000000000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.board_info.h.22.aeb00002354a4949fff54190040e37af
                           .group:0000000000000000 wm4.opendefs.h.23.16dafe2a30b31097968a5d4db894173a
                           .group:0000000000000000 wm4.crypto_engine.h.8.a3dd976cbcb92c44f852cc7aa252f659

UNDEFINED SYMBOLS
board_crypto_engine
